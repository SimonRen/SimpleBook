<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<struct type='{_NSDecimal=&quot;_exponent&quot;b8&quot;_length&quot;b4&quot;_isNegative&quot;b1&quot;_isCompact&quot;b1&quot;_reserved&quot;b18&quot;_mantissa&quot;[8S]}' name='NSDecimal'/>
<struct type='{_NSFastEnumerationState=&quot;state&quot;L&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^L&quot;extra&quot;[5L]}' type64='{_NSFastEnumerationState=&quot;state&quot;Q&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^Q&quot;extra&quot;[5Q]}' name='NSFastEnumerationState'/>
<struct type='{_NSRange=&quot;location&quot;I&quot;length&quot;I}' type64='{_NSRange=&quot;location&quot;Q&quot;length&quot;Q}' name='NSRange'/>
<struct type='{_NSSwappedDouble=&quot;v&quot;Q}' name='NSSwappedDouble'/>
<struct type='{_NSSwappedFloat=&quot;v&quot;I}' name='NSSwappedFloat'/>
<opaque type='^{_NSZone=}' name='NSZone'/>
<constant type='@' name='NSAMPMDesignation'/>
<constant type='@' name='NSArgumentDomain'/>
<constant type='@' name='NSAssertionHandlerKey'/>
<constant type='@' name='NSAverageKeyValueOperator'/>
<constant type='@' name='NSBuddhistCalendar'/>
<constant type='@' name='NSBundleDidLoadNotification'/>
<constant type='@' name='NSCharacterConversionException'/>
<constant type='@' name='NSChineseCalendar'/>
<constant type='@' name='NSCocoaErrorDomain'/>
<constant type='@' name='NSCountKeyValueOperator'/>
<constant type='@' name='NSCurrencySymbol'/>
<constant type='@' name='NSCurrentLocaleDidChangeNotification'/>
<constant type='@' name='NSDateFormatString'/>
<constant type='@' name='NSDateTimeOrdering'/>
<constant type='@' name='NSDecimalDigits'/>
<constant type='@' name='NSDecimalNumberDivideByZeroException'/>
<constant type='@' name='NSDecimalNumberExactnessException'/>
<constant type='@' name='NSDecimalNumberOverflowException'/>
<constant type='@' name='NSDecimalNumberUnderflowException'/>
<constant type='@' name='NSDecimalSeparator'/>
<constant type='@' name='NSDefaultRunLoopMode'/>
<constant type='@' name='NSDestinationInvalidException'/>
<constant type='@' name='NSDidBecomeSingleThreadedNotification'/>
<constant type='@' name='NSDistinctUnionOfArraysKeyValueOperator'/>
<constant type='@' name='NSDistinctUnionOfObjectsKeyValueOperator'/>
<constant type='@' name='NSDistinctUnionOfSetsKeyValueOperator'/>
<constant type='@' name='NSEarlierTimeDesignations'/>
<constant type='@' name='NSErrorFailingURLStringKey'/>
<constant type='@' name='NSFileAppendOnly'/>
<constant type='@' name='NSFileBusy'/>
<constant type='@' name='NSFileCreationDate'/>
<constant type='@' name='NSFileDeviceIdentifier'/>
<constant type='@' name='NSFileExtensionHidden'/>
<constant type='@' name='NSFileGroupOwnerAccountID'/>
<constant type='@' name='NSFileGroupOwnerAccountName'/>
<constant type='@' name='NSFileHFSCreatorCode'/>
<constant type='@' name='NSFileHFSTypeCode'/>
<constant type='@' name='NSFileHandleConnectionAcceptedNotification'/>
<constant type='@' name='NSFileHandleDataAvailableNotification'/>
<constant type='@' name='NSFileHandleNotificationDataItem'/>
<constant type='@' name='NSFileHandleNotificationFileHandleItem'/>
<constant type='@' name='NSFileHandleNotificationMonitorModes'/>
<constant type='@' name='NSFileHandleOperationException'/>
<constant type='@' name='NSFileHandleReadCompletionNotification'/>
<constant type='@' name='NSFileHandleReadToEndOfFileCompletionNotification'/>
<constant type='@' name='NSFileImmutable'/>
<constant type='@' name='NSFileModificationDate'/>
<constant type='@' name='NSFileOwnerAccountID'/>
<constant type='@' name='NSFileOwnerAccountName'/>
<constant type='@' name='NSFilePathErrorKey'/>
<constant type='@' name='NSFilePosixPermissions'/>
<constant type='@' name='NSFileReferenceCount'/>
<constant type='@' name='NSFileSize'/>
<constant type='@' name='NSFileSystemFileNumber'/>
<constant type='@' name='NSFileSystemFreeNodes'/>
<constant type='@' name='NSFileSystemFreeSize'/>
<constant type='@' name='NSFileSystemNodes'/>
<constant type='@' name='NSFileSystemNumber'/>
<constant type='@' name='NSFileSystemSize'/>
<constant type='@' name='NSFileType'/>
<constant type='@' name='NSFileTypeBlockSpecial'/>
<constant type='@' name='NSFileTypeCharacterSpecial'/>
<constant type='@' name='NSFileTypeDirectory'/>
<constant type='@' name='NSFileTypeRegular'/>
<constant type='@' name='NSFileTypeSocket'/>
<constant type='@' name='NSFileTypeSymbolicLink'/>
<constant type='@' name='NSFileTypeUnknown'/>
<constant type='d' name='NSFoundationVersionNumber'/>
<constant type='@' name='NSGenericException'/>
<constant type='@' name='NSGlobalDomain'/>
<constant type='@' name='NSGregorianCalendar'/>
<constant type='@' name='NSHTTPCookieComment'/>
<constant type='@' name='NSHTTPCookieCommentURL'/>
<constant type='@' name='NSHTTPCookieDiscard'/>
<constant type='@' name='NSHTTPCookieDomain'/>
<constant type='@' name='NSHTTPCookieExpires'/>
<constant type='@' name='NSHTTPCookieManagerAcceptPolicyChangedNotification'/>
<constant type='@' name='NSHTTPCookieManagerCookiesChangedNotification'/>
<constant type='@' name='NSHTTPCookieMaximumAge'/>
<constant type='@' name='NSHTTPCookieName'/>
<constant type='@' name='NSHTTPCookieOriginURL'/>
<constant type='@' name='NSHTTPCookiePath'/>
<constant type='@' name='NSHTTPCookiePort'/>
<constant type='@' name='NSHTTPCookieSecure'/>
<constant type='@' name='NSHTTPCookieValue'/>
<constant type='@' name='NSHTTPCookieVersion'/>
<constant type='@' name='NSHebrewCalendar'/>
<constant type='@' name='NSHelpAnchorErrorKey'/>
<constant type='@' name='NSHourNameDesignations'/>
<constant type='@' name='NSISO8601Calendar'/>
<constant type='@' name='NSIndianCalendar'/>
<constant type='@' name='NSInternalInconsistencyException'/>
<constant type='@' name='NSInternationalCurrencyString'/>
<constant type='@' name='NSInvalidArchiveOperationException'/>
<constant type='@' name='NSInvalidArgumentException'/>
<constant type='@' name='NSInvalidReceivePortException'/>
<constant type='@' name='NSInvalidSendPortException'/>
<constant type='@' name='NSInvalidUnarchiveOperationException'/>
<constant type='@' name='NSInvocationOperationCancelledException'/>
<constant type='@' name='NSInvocationOperationVoidResultException'/>
<constant type='@' name='NSIsNilTransformerName'/>
<constant type='@' name='NSIsNotNilTransformerName'/>
<constant type='@' name='NSIslamicCalendar'/>
<constant type='@' name='NSIslamicCivilCalendar'/>
<constant type='@' name='NSJapaneseCalendar'/>
<constant type='@' name='NSKeyValueChangeIndexesKey'/>
<constant type='@' name='NSKeyValueChangeKindKey'/>
<constant type='@' name='NSKeyValueChangeNewKey'/>
<constant type='@' name='NSKeyValueChangeNotificationIsPriorKey'/>
<constant type='@' name='NSKeyValueChangeOldKey'/>
<constant type='@' name='NSKeyedUnarchiveFromDataTransformerName'/>
<constant type='@' name='NSLaterTimeDesignations'/>
<constant type='@' name='NSLinguisticTagAdjective'/>
<constant type='@' name='NSLinguisticTagAdverb'/>
<constant type='@' name='NSLinguisticTagClassifier'/>
<constant type='@' name='NSLinguisticTagCloseParenthesis'/>
<constant type='@' name='NSLinguisticTagCloseQuote'/>
<constant type='@' name='NSLinguisticTagConjunction'/>
<constant type='@' name='NSLinguisticTagDash'/>
<constant type='@' name='NSLinguisticTagDeterminer'/>
<constant type='@' name='NSLinguisticTagIdiom'/>
<constant type='@' name='NSLinguisticTagInterjection'/>
<constant type='@' name='NSLinguisticTagNoun'/>
<constant type='@' name='NSLinguisticTagNumber'/>
<constant type='@' name='NSLinguisticTagOpenParenthesis'/>
<constant type='@' name='NSLinguisticTagOpenQuote'/>
<constant type='@' name='NSLinguisticTagOrganizationName'/>
<constant type='@' name='NSLinguisticTagOther'/>
<constant type='@' name='NSLinguisticTagOtherPunctuation'/>
<constant type='@' name='NSLinguisticTagOtherWhitespace'/>
<constant type='@' name='NSLinguisticTagOtherWord'/>
<constant type='@' name='NSLinguisticTagParagraphBreak'/>
<constant type='@' name='NSLinguisticTagParticle'/>
<constant type='@' name='NSLinguisticTagPersonalName'/>
<constant type='@' name='NSLinguisticTagPlaceName'/>
<constant type='@' name='NSLinguisticTagPreposition'/>
<constant type='@' name='NSLinguisticTagPronoun'/>
<constant type='@' name='NSLinguisticTagPunctuation'/>
<constant type='@' name='NSLinguisticTagSchemeLanguage'/>
<constant type='@' name='NSLinguisticTagSchemeLemma'/>
<constant type='@' name='NSLinguisticTagSchemeLexicalClass'/>
<constant type='@' name='NSLinguisticTagSchemeNameType'/>
<constant type='@' name='NSLinguisticTagSchemeNameTypeOrLexicalClass'/>
<constant type='@' name='NSLinguisticTagSchemeScript'/>
<constant type='@' name='NSLinguisticTagSchemeTokenType'/>
<constant type='@' name='NSLinguisticTagSentenceTerminator'/>
<constant type='@' name='NSLinguisticTagVerb'/>
<constant type='@' name='NSLinguisticTagWhitespace'/>
<constant type='@' name='NSLinguisticTagWord'/>
<constant type='@' name='NSLinguisticTagWordJoiner'/>
<constant type='@' name='NSLoadedClasses'/>
<constant type='@' name='NSLocaleAlternateQuotationBeginDelimiterKey'/>
<constant type='@' name='NSLocaleAlternateQuotationEndDelimiterKey'/>
<constant type='@' name='NSLocaleCalendar'/>
<constant type='@' name='NSLocaleCollationIdentifier'/>
<constant type='@' name='NSLocaleCollatorIdentifier'/>
<constant type='@' name='NSLocaleCountryCode'/>
<constant type='@' name='NSLocaleCurrencyCode'/>
<constant type='@' name='NSLocaleCurrencySymbol'/>
<constant type='@' name='NSLocaleDecimalSeparator'/>
<constant type='@' name='NSLocaleExemplarCharacterSet'/>
<constant type='@' name='NSLocaleGroupingSeparator'/>
<constant type='@' name='NSLocaleIdentifier'/>
<constant type='@' name='NSLocaleLanguageCode'/>
<constant type='@' name='NSLocaleMeasurementSystem'/>
<constant type='@' name='NSLocaleQuotationBeginDelimiterKey'/>
<constant type='@' name='NSLocaleQuotationEndDelimiterKey'/>
<constant type='@' name='NSLocaleScriptCode'/>
<constant type='@' name='NSLocaleUsesMetricSystem'/>
<constant type='@' name='NSLocaleVariantCode'/>
<constant type='@' name='NSLocalizedDescriptionKey'/>
<constant type='@' name='NSLocalizedFailureReasonErrorKey'/>
<constant type='@' name='NSLocalizedRecoveryOptionsErrorKey'/>
<constant type='@' name='NSLocalizedRecoverySuggestionErrorKey'/>
<constant type='@' name='NSMachErrorDomain'/>
<constant type='@' name='NSMallocException'/>
<constant type='@' name='NSMaximumKeyValueOperator'/>
<constant type='@' name='NSMetadataItemDisplayNameKey'/>
<constant type='@' name='NSMetadataItemFSContentChangeDateKey'/>
<constant type='@' name='NSMetadataItemFSCreationDateKey'/>
<constant type='@' name='NSMetadataItemFSNameKey'/>
<constant type='@' name='NSMetadataItemFSSizeKey'/>
<constant type='@' name='NSMetadataItemIsUbiquitousKey'/>
<constant type='@' name='NSMetadataItemPathKey'/>
<constant type='@' name='NSMetadataItemURLKey'/>
<constant type='@' name='NSMetadataQueryDidFinishGatheringNotification'/>
<constant type='@' name='NSMetadataQueryDidStartGatheringNotification'/>
<constant type='@' name='NSMetadataQueryDidUpdateNotification'/>
<constant type='@' name='NSMetadataQueryGatheringProgressNotification'/>
<constant type='@' name='NSMetadataQueryLocalComputerScope'/>
<constant type='@' name='NSMetadataQueryNetworkScope'/>
<constant type='@' name='NSMetadataQueryResultContentRelevanceAttribute'/>
<constant type='@' name='NSMetadataQueryUbiquitousDataScope'/>
<constant type='@' name='NSMetadataQueryUbiquitousDocumentsScope'/>
<constant type='@' name='NSMetadataQueryUserHomeScope'/>
<constant type='@' name='NSMetadataUbiquitousItemHasUnresolvedConflictsKey'/>
<constant type='@' name='NSMetadataUbiquitousItemIsDownloadedKey'/>
<constant type='@' name='NSMetadataUbiquitousItemIsDownloadingKey'/>
<constant type='@' name='NSMetadataUbiquitousItemIsUploadedKey'/>
<constant type='@' name='NSMetadataUbiquitousItemIsUploadingKey'/>
<constant type='@' name='NSMetadataUbiquitousItemPercentDownloadedKey'/>
<constant type='@' name='NSMetadataUbiquitousItemPercentUploadedKey'/>
<constant type='@' name='NSMinimumKeyValueOperator'/>
<constant type='@' name='NSMonthNameArray'/>
<constant type='@' name='NSNegateBooleanTransformerName'/>
<constant type='@' name='NSNegativeCurrencyFormatString'/>
<constant type='@' name='NSNetServicesErrorCode'/>
<constant type='@' name='NSNetServicesErrorDomain'/>
<constant type='@' name='NSNextDayDesignations'/>
<constant type='@' name='NSNextNextDayDesignations'/>
<constant type='@' name='NSOSStatusErrorDomain'/>
<constant type='@' name='NSObjectInaccessibleException'/>
<constant type='@' name='NSObjectNotAvailableException'/>
<constant type='@' name='NSOldStyleException'/>
<constant type='@' name='NSPOSIXErrorDomain'/>
<constant type='@' name='NSParseErrorException'/>
<constant type='@' name='NSPersianCalendar'/>
<constant type='@' name='NSPortDidBecomeInvalidNotification'/>
<constant type='@' name='NSPortReceiveException'/>
<constant type='@' name='NSPortSendException'/>
<constant type='@' name='NSPortTimeoutException'/>
<constant type='@' name='NSPositiveCurrencyFormatString'/>
<constant type='@' name='NSPriorDayDesignations'/>
<constant type='@' name='NSRangeException'/>
<constant type='@' name='NSRecoveryAttempterErrorKey'/>
<constant type='@' name='NSRegistrationDomain'/>
<constant type='@' name='NSRepublicOfChinaCalendar'/>
<constant type='@' name='NSRunLoopCommonModes'/>
<constant type='@' name='NSShortDateFormatString'/>
<constant type='@' name='NSShortMonthNameArray'/>
<constant type='@' name='NSShortTimeDateFormatString'/>
<constant type='@' name='NSShortWeekDayNameArray'/>
<constant type='@' name='NSStreamDataWrittenToMemoryStreamKey'/>
<constant type='@' name='NSStreamFileCurrentOffsetKey'/>
<constant type='@' name='NSStreamNetworkServiceType'/>
<constant type='@' name='NSStreamNetworkServiceTypeBackground'/>
<constant type='@' name='NSStreamNetworkServiceTypeVideo'/>
<constant type='@' name='NSStreamNetworkServiceTypeVoIP'/>
<constant type='@' name='NSStreamNetworkServiceTypeVoice'/>
<constant type='@' name='NSStreamSOCKSErrorDomain'/>
<constant type='@' name='NSStreamSOCKSProxyConfigurationKey'/>
<constant type='@' name='NSStreamSOCKSProxyHostKey'/>
<constant type='@' name='NSStreamSOCKSProxyPasswordKey'/>
<constant type='@' name='NSStreamSOCKSProxyPortKey'/>
<constant type='@' name='NSStreamSOCKSProxyUserKey'/>
<constant type='@' name='NSStreamSOCKSProxyVersion4'/>
<constant type='@' name='NSStreamSOCKSProxyVersion5'/>
<constant type='@' name='NSStreamSOCKSProxyVersionKey'/>
<constant type='@' name='NSStreamSocketSSLErrorDomain'/>
<constant type='@' name='NSStreamSocketSecurityLevelKey'/>
<constant type='@' name='NSStreamSocketSecurityLevelNegotiatedSSL'/>
<constant type='@' name='NSStreamSocketSecurityLevelNone'/>
<constant type='@' name='NSStreamSocketSecurityLevelSSLv2'/>
<constant type='@' name='NSStreamSocketSecurityLevelSSLv3'/>
<constant type='@' name='NSStreamSocketSecurityLevelTLSv1'/>
<constant type='@' name='NSStringEncodingErrorKey'/>
<constant type='@' name='NSSumKeyValueOperator'/>
<constant type='@' name='NSSystemClockDidChangeNotification'/>
<constant type='@' name='NSSystemTimeZoneDidChangeNotification'/>
<constant type='@' name='NSTextCheckingAirlineKey'/>
<constant type='@' name='NSTextCheckingCityKey'/>
<constant type='@' name='NSTextCheckingCountryKey'/>
<constant type='@' name='NSTextCheckingFlightKey'/>
<constant type='@' name='NSTextCheckingJobTitleKey'/>
<constant type='@' name='NSTextCheckingNameKey'/>
<constant type='@' name='NSTextCheckingOrganizationKey'/>
<constant type='@' name='NSTextCheckingPhoneKey'/>
<constant type='@' name='NSTextCheckingStateKey'/>
<constant type='@' name='NSTextCheckingStreetKey'/>
<constant type='@' name='NSTextCheckingZIPKey'/>
<constant type='@' name='NSThisDayDesignations'/>
<constant type='@' name='NSThousandsSeparator'/>
<constant type='@' name='NSThreadWillExitNotification'/>
<constant type='@' name='NSTimeDateFormatString'/>
<constant type='@' name='NSTimeFormatString'/>
<constant type='@' name='NSURLAttributeModificationDateKey'/>
<constant type='@' name='NSURLAuthenticationMethodClientCertificate'/>
<constant type='@' name='NSURLAuthenticationMethodDefault'/>
<constant type='@' name='NSURLAuthenticationMethodHTMLForm'/>
<constant type='@' name='NSURLAuthenticationMethodHTTPBasic'/>
<constant type='@' name='NSURLAuthenticationMethodHTTPDigest'/>
<constant type='@' name='NSURLAuthenticationMethodNTLM'/>
<constant type='@' name='NSURLAuthenticationMethodNegotiate'/>
<constant type='@' name='NSURLAuthenticationMethodServerTrust'/>
<constant type='@' name='NSURLContentAccessDateKey'/>
<constant type='@' name='NSURLContentModificationDateKey'/>
<constant type='@' name='NSURLCreationDateKey'/>
<constant type='@' name='NSURLCredentialStorageChangedNotification'/>
<constant type='@' name='NSURLCustomIconKey'/>
<constant type='@' name='NSURLEffectiveIconKey'/>
<constant type='@' name='NSURLErrorDomain'/>
<constant type='@' name='NSURLErrorFailingURLErrorKey'/>
<constant type='@' name='NSURLErrorFailingURLPeerTrustErrorKey'/>
<constant type='@' name='NSURLErrorFailingURLStringErrorKey'/>
<constant type='@' name='NSURLErrorKey'/>
<constant type='@' name='NSURLFileAllocatedSizeKey'/>
<constant type='@' name='NSURLFileResourceIdentifierKey'/>
<constant type='@' name='NSURLFileResourceTypeBlockSpecial'/>
<constant type='@' name='NSURLFileResourceTypeCharacterSpecial'/>
<constant type='@' name='NSURLFileResourceTypeDirectory'/>
<constant type='@' name='NSURLFileResourceTypeKey'/>
<constant type='@' name='NSURLFileResourceTypeNamedPipe'/>
<constant type='@' name='NSURLFileResourceTypeRegular'/>
<constant type='@' name='NSURLFileResourceTypeSocket'/>
<constant type='@' name='NSURLFileResourceTypeSymbolicLink'/>
<constant type='@' name='NSURLFileResourceTypeUnknown'/>
<constant type='@' name='NSURLFileScheme'/>
<constant type='@' name='NSURLFileSecurityKey'/>
<constant type='@' name='NSURLFileSizeKey'/>
<constant type='@' name='NSURLHasHiddenExtensionKey'/>
<constant type='@' name='NSURLIsAliasFileKey'/>
<constant type='@' name='NSURLIsDirectoryKey'/>
<constant type='@' name='NSURLIsExecutableKey'/>
<constant type='@' name='NSURLIsHiddenKey'/>
<constant type='@' name='NSURLIsMountTriggerKey'/>
<constant type='@' name='NSURLIsPackageKey'/>
<constant type='@' name='NSURLIsReadableKey'/>
<constant type='@' name='NSURLIsRegularFileKey'/>
<constant type='@' name='NSURLIsSymbolicLinkKey'/>
<constant type='@' name='NSURLIsSystemImmutableKey'/>
<constant type='@' name='NSURLIsUbiquitousItemKey'/>
<constant type='@' name='NSURLIsUserImmutableKey'/>
<constant type='@' name='NSURLIsVolumeKey'/>
<constant type='@' name='NSURLIsWritableKey'/>
<constant type='@' name='NSURLKeysOfUnsetValuesKey'/>
<constant type='@' name='NSURLLabelColorKey'/>
<constant type='@' name='NSURLLabelNumberKey'/>
<constant type='@' name='NSURLLinkCountKey'/>
<constant type='@' name='NSURLLocalizedLabelKey'/>
<constant type='@' name='NSURLLocalizedNameKey'/>
<constant type='@' name='NSURLLocalizedTypeDescriptionKey'/>
<constant type='@' name='NSURLNameKey'/>
<constant type='@' name='NSURLParentDirectoryURLKey'/>
<constant type='@' name='NSURLPreferredIOBlockSizeKey'/>
<constant type='@' name='NSURLProtectionSpaceFTP'/>
<constant type='@' name='NSURLProtectionSpaceFTPProxy'/>
<constant type='@' name='NSURLProtectionSpaceHTTP'/>
<constant type='@' name='NSURLProtectionSpaceHTTPProxy'/>
<constant type='@' name='NSURLProtectionSpaceHTTPS'/>
<constant type='@' name='NSURLProtectionSpaceHTTPSProxy'/>
<constant type='@' name='NSURLProtectionSpaceSOCKSProxy'/>
<constant type='@' name='NSURLTotalFileAllocatedSizeKey'/>
<constant type='@' name='NSURLTotalFileSizeKey'/>
<constant type='@' name='NSURLTypeIdentifierKey'/>
<constant type='@' name='NSURLUbiquitousItemHasUnresolvedConflictsKey'/>
<constant type='@' name='NSURLUbiquitousItemIsDownloadedKey'/>
<constant type='@' name='NSURLUbiquitousItemIsDownloadingKey'/>
<constant type='@' name='NSURLUbiquitousItemIsUploadedKey'/>
<constant type='@' name='NSURLUbiquitousItemIsUploadingKey'/>
<constant type='@' name='NSURLUbiquitousItemPercentDownloadedKey'/>
<constant type='@' name='NSURLUbiquitousItemPercentUploadedKey'/>
<constant type='@' name='NSURLVolumeAvailableCapacityKey'/>
<constant type='@' name='NSURLVolumeCreationDateKey'/>
<constant type='@' name='NSURLVolumeIdentifierKey'/>
<constant type='@' name='NSURLVolumeIsAutomountedKey'/>
<constant type='@' name='NSURLVolumeIsBrowsableKey'/>
<constant type='@' name='NSURLVolumeIsEjectableKey'/>
<constant type='@' name='NSURLVolumeIsInternalKey'/>
<constant type='@' name='NSURLVolumeIsJournalingKey'/>
<constant type='@' name='NSURLVolumeIsLocalKey'/>
<constant type='@' name='NSURLVolumeIsReadOnlyKey'/>
<constant type='@' name='NSURLVolumeIsRemovableKey'/>
<constant type='@' name='NSURLVolumeLocalizedFormatDescriptionKey'/>
<constant type='@' name='NSURLVolumeLocalizedNameKey'/>
<constant type='@' name='NSURLVolumeMaximumFileSizeKey'/>
<constant type='@' name='NSURLVolumeNameKey'/>
<constant type='@' name='NSURLVolumeResourceCountKey'/>
<constant type='@' name='NSURLVolumeSupportsAdvisoryFileLockingKey'/>
<constant type='@' name='NSURLVolumeSupportsCasePreservedNamesKey'/>
<constant type='@' name='NSURLVolumeSupportsCaseSensitiveNamesKey'/>
<constant type='@' name='NSURLVolumeSupportsExtendedSecurityKey'/>
<constant type='@' name='NSURLVolumeSupportsHardLinksKey'/>
<constant type='@' name='NSURLVolumeSupportsJournalingKey'/>
<constant type='@' name='NSURLVolumeSupportsPersistentIDsKey'/>
<constant type='@' name='NSURLVolumeSupportsRenamingKey'/>
<constant type='@' name='NSURLVolumeSupportsRootDirectoryDatesKey'/>
<constant type='@' name='NSURLVolumeSupportsSparseFilesKey'/>
<constant type='@' name='NSURLVolumeSupportsSymbolicLinksKey'/>
<constant type='@' name='NSURLVolumeSupportsVolumeSizesKey'/>
<constant type='@' name='NSURLVolumeSupportsZeroRunsKey'/>
<constant type='@' name='NSURLVolumeTotalCapacityKey'/>
<constant type='@' name='NSURLVolumeURLForRemountingKey'/>
<constant type='@' name='NSURLVolumeURLKey'/>
<constant type='@' name='NSURLVolumeUUIDStringKey'/>
<constant type='@' name='NSUbiquitousKeyValueStoreChangeReasonKey'/>
<constant type='@' name='NSUbiquitousKeyValueStoreChangedKeysKey'/>
<constant type='@' name='NSUbiquitousKeyValueStoreDidChangeExternallyNotification'/>
<constant type='@' name='NSUnarchiveFromDataTransformerName'/>
<constant type='@' name='NSUndefinedKeyException'/>
<constant type='@' name='NSUnderlyingErrorKey'/>
<constant type='@' name='NSUndoManagerCheckpointNotification'/>
<constant type='@' name='NSUndoManagerDidCloseUndoGroupNotification'/>
<constant type='@' name='NSUndoManagerDidOpenUndoGroupNotification'/>
<constant type='@' name='NSUndoManagerDidRedoChangeNotification'/>
<constant type='@' name='NSUndoManagerDidUndoChangeNotification'/>
<constant type='@' name='NSUndoManagerGroupIsDiscardableKey'/>
<constant type='@' name='NSUndoManagerWillCloseUndoGroupNotification'/>
<constant type='@' name='NSUndoManagerWillRedoChangeNotification'/>
<constant type='@' name='NSUndoManagerWillUndoChangeNotification'/>
<constant type='@' name='NSUnionOfArraysKeyValueOperator'/>
<constant type='@' name='NSUnionOfObjectsKeyValueOperator'/>
<constant type='@' name='NSUnionOfSetsKeyValueOperator'/>
<constant type='@' name='NSUserDefaultsDidChangeNotification'/>
<constant type='@' name='NSWeekDayNameArray'/>
<constant type='@' name='NSWillBecomeMultiThreadedNotification'/>
<constant type='@' name='NSXMLParserErrorDomain'/>
<constant type='@' name='NSYearMonthWeekDesignations'/>
<enum value='1' name='NSASCIIStringEncoding'/>
<enum value='4' name='NSAdminApplicationDirectory'/>
<enum value='14' name='NSAggregateExpressionType'/>
<enum value='100' name='NSAllApplicationsDirectory'/>
<enum value='65535' name='NSAllDomainsMask'/>
<enum value='101' name='NSAllLibrariesDirectory'/>
<enum value='1' name='NSAllPredicateModifier'/>
<enum value='8' name='NSAnchoredSearch'/>
<enum value='1' name='NSAndPredicateType'/>
<enum value='2' name='NSAnyPredicateModifier'/>
<enum value='1' name='NSApplicationDirectory'/>
<enum value='14' name='NSApplicationSupportDirectory'/>
<enum value='1' name='NSAtomicWrite'/>
<enum value='1048576' name='NSAttributedStringEnumerationLongestEffectiveRangeNotRequired'/>
<enum value='2' name='NSAttributedStringEnumerationReverse'/>
<enum value='11' name='NSAutosavedInformationDirectory'/>
<enum value='4' name='NSBackwardsSearch'/>
<enum value='8' name='NSBeginsWithPredicateOperatorType'/>
<enum value='100' name='NSBetweenPredicateOperatorType'/>
<enum value='256' name='NSBinarySearchingFirstEqual'/>
<enum value='1024' name='NSBinarySearchingInsertionIndex'/>
<enum value='512' name='NSBinarySearchingLastEqual'/>
<enum value='19' name='NSBlockExpressionType'/>
<enum value='7' name='NSBundleExecutableArchitectureI386'/>
<enum value='18' name='NSBundleExecutableArchitecturePPC'/>
<enum value='16777234' name='NSBundleExecutableArchitecturePPC64'/>
<enum value='16777223' name='NSBundleExecutableArchitectureX86_64'/>
<enum value='13' name='NSCachesDirectory'/>
<enum value='4' name='NSCalculationDivideByZero'/>
<enum value='1' name='NSCalculationLossOfPrecision'/>
<enum value='0' name='NSCalculationNoError'/>
<enum value='3' name='NSCalculationOverflow'/>
<enum value='2' name='NSCalculationUnderflow'/>
<enum value='1048576' name='NSCalendarCalendarUnit'/>
<enum value='1' name='NSCaseInsensitivePredicateOption'/>
<enum value='1' name='NSCaseInsensitiveSearch'/>
<enum value='2' name='NSCollectorDisabledOption'/>
<enum value='0' name='NSConstantValueExpressionType'/>
<enum value='99' name='NSContainsPredicateOperatorType'/>
<enum value='10' name='NSCoreServiceDirectory'/>
<enum value='11' name='NSCustomSelectorPredicateOperatorType'/>
<enum value='1' name='NSDataReadingMapped'/>
<enum value='8' name='NSDataReadingMappedAlways'/>
<enum value='1' name='NSDataReadingMappedIfSafe'/>
<enum value='2' name='NSDataReadingUncached'/>
<enum value='2' name='NSDataSearchAnchored'/>
<enum value='1' name='NSDataSearchBackwards'/>
<enum value='1' name='NSDataWritingAtomic'/>
<enum value='1000' name='NSDateFormatterBehavior10_0'/>
<enum value='1040' name='NSDateFormatterBehavior10_4'/>
<enum value='0' name='NSDateFormatterBehaviorDefault'/>
<enum value='4' name='NSDateFormatterFullStyle'/>
<enum value='3' name='NSDateFormatterLongStyle'/>
<enum value='2' name='NSDateFormatterMediumStyle'/>
<enum value='0' name='NSDateFormatterNoStyle'/>
<enum value='1' name='NSDateFormatterShortStyle'/>
<enum value='16' name='NSDayCalendarUnit'/>
<enum value='8' name='NSDecimalMaxSize'/>
<enum value='32767' name='NSDecimalNoScale'/>
<enum value='2' name='NSDemoApplicationDirectory'/>
<enum value='12' name='NSDesktopDirectory'/>
<enum value='3' name='NSDeveloperApplicationDirectory'/>
<enum value='6' name='NSDeveloperDirectory'/>
<enum value='2' name='NSDiacriticInsensitivePredicateOption'/>
<enum value='128' name='NSDiacriticInsensitiveSearch'/>
<enum value='0' name='NSDirectPredicateModifier'/>
<enum value='4' name='NSDirectoryEnumerationSkipsHiddenFiles'/>
<enum value='2' name='NSDirectoryEnumerationSkipsPackageDescendants'/>
<enum value='1' name='NSDirectoryEnumerationSkipsSubdirectoryDescendants'/>
<enum value='9' name='NSDocumentDirectory'/>
<enum value='8' name='NSDocumentationDirectory'/>
<enum value='15' name='NSDownloadsDirectory'/>
<enum value='9' name='NSEndsWithPredicateOperatorType'/>
<enum value='1' name='NSEnumerationConcurrent'/>
<enum value='2' name='NSEnumerationReverse'/>
<enum value='4' name='NSEqualToPredicateOperatorType'/>
<enum value='2' name='NSEraCalendarUnit'/>
<enum value='1' name='NSEvaluatedObjectExpressionType'/>
<enum value='3585' name='NSExecutableArchitectureMismatchError'/>
<enum value='3839' name='NSExecutableErrorMaximum'/>
<enum value='3584' name='NSExecutableErrorMinimum'/>
<enum value='3588' name='NSExecutableLinkError'/>
<enum value='3587' name='NSExecutableLoadError'/>
<enum value='3584' name='NSExecutableNotLoadableError'/>
<enum value='3586' name='NSExecutableRuntimeMismatchError'/>
<enum value='2' name='NSFileCoordinatorReadingResolvesSymbolicLink'/>
<enum value='1' name='NSFileCoordinatorReadingWithoutChanges'/>
<enum value='1' name='NSFileCoordinatorWritingForDeleting'/>
<enum value='4' name='NSFileCoordinatorWritingForMerging'/>
<enum value='2' name='NSFileCoordinatorWritingForMoving'/>
<enum value='8' name='NSFileCoordinatorWritingForReplacing'/>
<enum value='1023' name='NSFileErrorMaximum'/>
<enum value='0' name='NSFileErrorMinimum'/>
<enum value='255' name='NSFileLockingError'/>
<enum value='1' name='NSFileManagerItemReplacementUsingNewMetadataOnly'/>
<enum value='2' name='NSFileManagerItemReplacementWithoutDeletingBackupItem'/>
<enum value='4' name='NSFileNoSuchFileError'/>
<enum value='259' name='NSFileReadCorruptFileError'/>
<enum value='261' name='NSFileReadInapplicableStringEncodingError'/>
<enum value='258' name='NSFileReadInvalidFileNameError'/>
<enum value='257' name='NSFileReadNoPermissionError'/>
<enum value='260' name='NSFileReadNoSuchFileError'/>
<enum value='263' name='NSFileReadTooLargeError'/>
<enum value='256' name='NSFileReadUnknownError'/>
<enum value='264' name='NSFileReadUnknownStringEncodingError'/>
<enum value='262' name='NSFileReadUnsupportedSchemeError'/>
<enum value='1' name='NSFileVersionAddingByMoving'/>
<enum value='1' name='NSFileVersionReplacingByMoving'/>
<enum value='1' name='NSFileWrapperReadingImmediate'/>
<enum value='2' name='NSFileWrapperReadingWithoutMapping'/>
<enum value='1' name='NSFileWrapperWritingAtomic'/>
<enum value='2' name='NSFileWrapperWritingWithNameUpdating'/>
<enum value='516' name='NSFileWriteFileExistsError'/>
<enum value='517' name='NSFileWriteInapplicableStringEncodingError'/>
<enum value='514' name='NSFileWriteInvalidFileNameError'/>
<enum value='513' name='NSFileWriteNoPermissionError'/>
<enum value='640' name='NSFileWriteOutOfSpaceError'/>
<enum value='512' name='NSFileWriteUnknownError'/>
<enum value='518' name='NSFileWriteUnsupportedSchemeError'/>
<enum value='642' name='NSFileWriteVolumeReadOnlyError'/>
<enum value='512' name='NSForcedOrderingSearch'/>
<enum value='2048' name='NSFormattingError'/>
<enum value='2559' name='NSFormattingErrorMaximum'/>
<enum value='2048' name='NSFormattingErrorMinimum'/>
<enum value='397.40' name='NSFoundationVersionNumber10_0'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_1'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_2'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_3'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_4'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_1'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_2'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_3'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_4'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_5'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_6'/>
<enum value='462.70' name='NSFoundationVersionNumber10_2_7'/>
<enum value='462.70' name='NSFoundationVersionNumber10_2_8'/>
<enum value='500.00' name='NSFoundationVersionNumber10_3'/>
<enum value='500.00' name='NSFoundationVersionNumber10_3_1'/>
<enum value='500.30' name='NSFoundationVersionNumber10_3_2'/>
<enum value='500.54' name='NSFoundationVersionNumber10_3_3'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_4'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_5'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_6'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_7'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_8'/>
<enum value='500.58' name='NSFoundationVersionNumber10_3_9'/>
<enum value='567.00' name='NSFoundationVersionNumber10_4'/>
<enum value='567.00' name='NSFoundationVersionNumber10_4_1'/>
<enum value='567.29' name='NSFoundationVersionNumber10_4_10'/>
<enum value='567.36' name='NSFoundationVersionNumber10_4_11'/>
<enum value='567.12' name='NSFoundationVersionNumber10_4_2'/>
<enum value='567.21' name='NSFoundationVersionNumber10_4_3'/>
<enum value='567.23' name='NSFoundationVersionNumber10_4_4_Intel'/>
<enum value='567.21' name='NSFoundationVersionNumber10_4_4_PowerPC'/>
<enum value='567.25' name='NSFoundationVersionNumber10_4_5'/>
<enum value='567.26' name='NSFoundationVersionNumber10_4_6'/>
<enum value='567.27' name='NSFoundationVersionNumber10_4_7'/>
<enum value='567.28' name='NSFoundationVersionNumber10_4_8'/>
<enum value='567.29' name='NSFoundationVersionNumber10_4_9'/>
<enum value='677.00' name='NSFoundationVersionNumber10_5'/>
<enum value='677.10' name='NSFoundationVersionNumber10_5_1'/>
<enum value='677.15' name='NSFoundationVersionNumber10_5_2'/>
<enum value='677.19' name='NSFoundationVersionNumber10_5_3'/>
<enum value='677.19' name='NSFoundationVersionNumber10_5_4'/>
<enum value='677.21' name='NSFoundationVersionNumber10_5_5'/>
<enum value='677.22' name='NSFoundationVersionNumber10_5_6'/>
<enum value='677.24' name='NSFoundationVersionNumber10_5_7'/>
<enum value='677.26' name='NSFoundationVersionNumber10_5_8'/>
<enum value='751.00' name='NSFoundationVersionNumber10_6'/>
<enum value='751.00' name='NSFoundationVersionNumber10_6_1'/>
<enum value='751.14' name='NSFoundationVersionNumber10_6_2'/>
<enum value='751.21' name='NSFoundationVersionNumber10_6_3'/>
<enum value='751.29' name='NSFoundationVersionNumber10_6_4'/>
<enum value='751.42' name='NSFoundationVersionNumber10_6_5'/>
<enum value='412' name='NSFoundationVersionWithFileManagerResourceForkSupport'/>
<enum value='4' name='NSFunctionExpressionType'/>
<enum value='3' name='NSGreaterThanOrEqualToPredicateOperatorType'/>
<enum value='2' name='NSGreaterThanPredicateOperatorType'/>
<enum value='4' name='NSHPUXOperatingSystem'/>
<enum value='0' name='NSHTTPCookieAcceptPolicyAlways'/>
<enum value='1' name='NSHTTPCookieAcceptPolicyNever'/>
<enum value='2' name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain'/>
<enum value='32' name='NSHourCalendarUnit'/>
<enum value='1' name='NSINTEGER_DEFINED'/>
<enum value='21' name='NSISO2022JPStringEncoding'/>
<enum value='5' name='NSISOLatin1StringEncoding'/>
<enum value='9' name='NSISOLatin2StringEncoding'/>
<enum value='10' name='NSInPredicateOperatorType'/>
<enum value='16' name='NSInputMethodsDirectory'/>
<enum value='2147483647' value64='9223372036854775807' name='NSIntegerMax'/>
<enum value='-2147483648' value64='-9223372036854775808' name='NSIntegerMin'/>
<enum value='6' name='NSIntersectSetExpressionType'/>
<enum value='99' name='NSItemReplacementDirectory'/>
<enum value='4' name='NSJSONReadingAllowFragments'/>
<enum value='1' name='NSJSONReadingMutableContainers'/>
<enum value='2' name='NSJSONReadingMutableLeaves'/>
<enum value='1' name='NSJSONWritingPrettyPrinted'/>
<enum value='3' name='NSJapaneseEUCStringEncoding'/>
<enum value='3' name='NSKeyPathExpressionType'/>
<enum value='2' name='NSKeyValueChangeInsertion'/>
<enum value='3' name='NSKeyValueChangeRemoval'/>
<enum value='4' name='NSKeyValueChangeReplacement'/>
<enum value='1' name='NSKeyValueChangeSetting'/>
<enum value='3' name='NSKeyValueIntersectSetMutation'/>
<enum value='2' name='NSKeyValueMinusSetMutation'/>
<enum value='4' name='NSKeyValueObservingOptionInitial'/>
<enum value='1' name='NSKeyValueObservingOptionNew'/>
<enum value='2' name='NSKeyValueObservingOptionOld'/>
<enum value='8' name='NSKeyValueObservingOptionPrior'/>
<enum value='4' name='NSKeyValueSetSetMutation'/>
<enum value='1' name='NSKeyValueUnionSetMutation'/>
<enum value='1024' name='NSKeyValueValidationError'/>
<enum value='1' name='NSLessThanOrEqualToPredicateOperatorType'/>
<enum value='0' name='NSLessThanPredicateOperatorType'/>
<enum value='5' name='NSLibraryDirectory'/>
<enum value='7' name='NSLikePredicateOperatorType'/>
<enum value='16' name='NSLinguisticTaggerJoinNames'/>
<enum value='8' name='NSLinguisticTaggerOmitOther'/>
<enum value='2' name='NSLinguisticTaggerOmitPunctuation'/>
<enum value='4' name='NSLinguisticTaggerOmitWhitespace'/>
<enum value='1' name='NSLinguisticTaggerOmitWords'/>
<enum value='2' name='NSLiteralSearch'/>
<enum value='2' name='NSLocalDomainMask'/>
<enum value='4' name='NSLocaleLanguageDirectionBottomToTop'/>
<enum value='1' name='NSLocaleLanguageDirectionLeftToRight'/>
<enum value='2' name='NSLocaleLanguageDirectionRightToLeft'/>
<enum value='3' name='NSLocaleLanguageDirectionTopToBottom'/>
<enum value='0' name='NSLocaleLanguageDirectionUnknown'/>
<enum value='5' name='NSMACHOperatingSystem'/>
<enum value='30' name='NSMacOSRomanStringEncoding'/>
<enum value='0' name='NSMachPortDeallocateNone'/>
<enum value='2' name='NSMachPortDeallocateReceiveRight'/>
<enum value='1' name='NSMachPortDeallocateSendRight'/>
<enum value='1' name='NSMappedRead'/>
<enum value='6' name='NSMatchesPredicateOperatorType'/>
<enum value='4' name='NSMatchingAnchored'/>
<enum value='2' name='NSMatchingCompleted'/>
<enum value='4' name='NSMatchingHitEnd'/>
<enum value='16' name='NSMatchingInternalError'/>
<enum value='1' name='NSMatchingProgress'/>
<enum value='2' name='NSMatchingReportCompletion'/>
<enum value='1' name='NSMatchingReportProgress'/>
<enum value='8' name='NSMatchingRequiredEnd'/>
<enum value='8' name='NSMatchingWithTransparentBounds'/>
<enum value='16' name='NSMatchingWithoutAnchoringBounds'/>
<enum value='2147483646' name='NSMaximumStringLength'/>
<enum value='7' name='NSMinusSetExpressionType'/>
<enum value='64' name='NSMinuteCalendarUnit'/>
<enum value='8' name='NSMonthCalendarUnit'/>
<enum value='17' name='NSMoviesDirectory'/>
<enum value='18' name='NSMusicDirectory'/>
<enum value='2' name='NSNEXTSTEPStringEncoding'/>
<enum value='1' name='NSNetServiceNoAutoRename'/>
<enum value='-72003' name='NSNetServicesActivityInProgress'/>
<enum value='-72004' name='NSNetServicesBadArgumentError'/>
<enum value='-72005' name='NSNetServicesCancelledError'/>
<enum value='-72001' name='NSNetServicesCollisionError'/>
<enum value='-72006' name='NSNetServicesInvalidError'/>
<enum value='-72002' name='NSNetServicesNotFoundError'/>
<enum value='-72007' name='NSNetServicesTimeoutError'/>
<enum value='-72000' name='NSNetServicesUnknownError'/>
<enum value='4' name='NSNetworkDomainMask'/>
<enum value='7' name='NSNonLossyASCIIStringEncoding'/>
<enum value='4' name='NSNormalizedPredicateOption'/>
<enum value='5' name='NSNotEqualToPredicateOperatorType'/>
<enum value='2147483647' value64='9223372036854775807' name='NSNotFound'/>
<enum value='0' name='NSNotPredicateType'/>
<enum value='1' name='NSNotificationCoalescingOnName'/>
<enum value='2' name='NSNotificationCoalescingOnSender'/>
<enum value='0' name='NSNotificationNoCoalescing'/>
<enum value='1000' name='NSNumberFormatterBehavior10_0'/>
<enum value='1040' name='NSNumberFormatterBehavior10_4'/>
<enum value='0' name='NSNumberFormatterBehaviorDefault'/>
<enum value='2' name='NSNumberFormatterCurrencyStyle'/>
<enum value='1' name='NSNumberFormatterDecimalStyle'/>
<enum value='0' name='NSNumberFormatterNoStyle'/>
<enum value='1' name='NSNumberFormatterPadAfterPrefix'/>
<enum value='3' name='NSNumberFormatterPadAfterSuffix'/>
<enum value='0' name='NSNumberFormatterPadBeforePrefix'/>
<enum value='2' name='NSNumberFormatterPadBeforeSuffix'/>
<enum value='3' name='NSNumberFormatterPercentStyle'/>
<enum value='0' name='NSNumberFormatterRoundCeiling'/>
<enum value='2' name='NSNumberFormatterRoundDown'/>
<enum value='1' name='NSNumberFormatterRoundFloor'/>
<enum value='5' name='NSNumberFormatterRoundHalfDown'/>
<enum value='4' name='NSNumberFormatterRoundHalfEven'/>
<enum value='6' name='NSNumberFormatterRoundHalfUp'/>
<enum value='3' name='NSNumberFormatterRoundUp'/>
<enum value='4' name='NSNumberFormatterScientificStyle'/>
<enum value='5' name='NSNumberFormatterSpellOutStyle'/>
<enum value='64' name='NSNumericSearch'/>
<enum value='7' name='NSOSF1OperatingSystem'/>
<enum value='62464' name='NSOpenStepUnicodeReservedBase'/>
<enum value='-1' name='NSOperationQueueDefaultMaxConcurrentOperationCount'/>
<enum value='4' name='NSOperationQueuePriorityHigh'/>
<enum value='-4' name='NSOperationQueuePriorityLow'/>
<enum value='0' name='NSOperationQueuePriorityNormal'/>
<enum value='8' name='NSOperationQueuePriorityVeryHigh'/>
<enum value='-8' name='NSOperationQueuePriorityVeryLow'/>
<enum value='2' name='NSOrPredicateType'/>
<enum value='-1' name='NSOrderedAscending'/>
<enum value='1' name='NSOrderedDescending'/>
<enum value='0' name='NSOrderedSame'/>
<enum value='19' name='NSPicturesDirectory'/>
<enum value='2' name='NSPostASAP'/>
<enum value='3' name='NSPostNow'/>
<enum value='1' name='NSPostWhenIdle'/>
<enum value='22' name='NSPreferencePanesDirectory'/>
<enum value='20' name='NSPrinterDescriptionDirectory'/>
<enum value='200' name='NSPropertyListBinaryFormat_v1_0'/>
<enum value='4095' name='NSPropertyListErrorMaximum'/>
<enum value='3840' name='NSPropertyListErrorMinimum'/>
<enum value='0' name='NSPropertyListImmutable'/>
<enum value='1' name='NSPropertyListMutableContainers'/>
<enum value='2' name='NSPropertyListMutableContainersAndLeaves'/>
<enum value='1' name='NSPropertyListOpenStepFormat'/>
<enum value='3840' name='NSPropertyListReadCorruptError'/>
<enum value='3842' name='NSPropertyListReadStreamError'/>
<enum value='3841' name='NSPropertyListReadUnknownVersionError'/>
<enum value='3851' name='NSPropertyListWriteStreamError'/>
<enum value='100' name='NSPropertyListXMLFormat_v1_0'/>
<enum value='65536' name='NSProprietaryStringEncoding'/>
<enum value='2048' name='NSQuarterCalendarUnit'/>
<enum value='2' name='NSRegularExpressionAllowCommentsAndWhitespace'/>
<enum value='16' name='NSRegularExpressionAnchorsMatchLines'/>
<enum value='1' name='NSRegularExpressionCaseInsensitive'/>
<enum value='8' name='NSRegularExpressionDotMatchesLineSeparators'/>
<enum value='4' name='NSRegularExpressionIgnoreMetacharacters'/>
<enum value='1024' name='NSRegularExpressionSearch'/>
<enum value='64' name='NSRegularExpressionUseUnicodeWordBoundaries'/>
<enum value='32' name='NSRegularExpressionUseUnixLineSeparators'/>
<enum value='3' name='NSRoundBankers'/>
<enum value='1' name='NSRoundDown'/>
<enum value='0' name='NSRoundPlain'/>
<enum value='2' name='NSRoundUp'/>
<enum value='1' name='NSScannedOption'/>
<enum value='128' name='NSSecondCalendarUnit'/>
<enum value='21' name='NSSharedPublicDirectory'/>
<enum value='8' name='NSShiftJISStringEncoding'/>
<enum value='3' name='NSSolarisOperatingSystem'/>
<enum value='1' name='NSSortConcurrent'/>
<enum value='16' name='NSSortStable'/>
<enum value='16' name='NSStreamEventEndEncountered'/>
<enum value='8' name='NSStreamEventErrorOccurred'/>
<enum value='2' name='NSStreamEventHasBytesAvailable'/>
<enum value='4' name='NSStreamEventHasSpaceAvailable'/>
<enum value='0' name='NSStreamEventNone'/>
<enum value='1' name='NSStreamEventOpenCompleted'/>
<enum value='5' name='NSStreamStatusAtEnd'/>
<enum value='6' name='NSStreamStatusClosed'/>
<enum value='7' name='NSStreamStatusError'/>
<enum value='0' name='NSStreamStatusNotOpen'/>
<enum value='2' name='NSStreamStatusOpen'/>
<enum value='1' name='NSStreamStatusOpening'/>
<enum value='3' name='NSStreamStatusReading'/>
<enum value='4' name='NSStreamStatusWriting'/>
<enum value='1' name='NSStringEncodingConversionAllowLossy'/>
<enum value='2' name='NSStringEncodingConversionExternalRepresentation'/>
<enum value='2' name='NSStringEnumerationByComposedCharacterSequences'/>
<enum value='0' name='NSStringEnumerationByLines'/>
<enum value='1' name='NSStringEnumerationByParagraphs'/>
<enum value='4' name='NSStringEnumerationBySentences'/>
<enum value='3' name='NSStringEnumerationByWords'/>
<enum value='1024' name='NSStringEnumerationLocalized'/>
<enum value='256' name='NSStringEnumerationReverse'/>
<enum value='512' name='NSStringEnumerationSubstringNotRequired'/>
<enum value='13' name='NSSubqueryExpressionType'/>
<enum value='6' name='NSSunOSOperatingSystem'/>
<enum value='6' name='NSSymbolStringEncoding'/>
<enum value='8' name='NSSystemDomainMask'/>
<enum value='18446744069414584320' name='NSTextCheckingAllCustomTypes'/>
<enum value='4294967295' name='NSTextCheckingAllSystemTypes'/>
<enum value='18446744073709551615' name='NSTextCheckingAllTypes'/>
<enum value='16' name='NSTextCheckingTypeAddress'/>
<enum value='512' name='NSTextCheckingTypeCorrection'/>
<enum value='128' name='NSTextCheckingTypeDash'/>
<enum value='8' name='NSTextCheckingTypeDate'/>
<enum value='4' name='NSTextCheckingTypeGrammar'/>
<enum value='32' name='NSTextCheckingTypeLink'/>
<enum value='1' name='NSTextCheckingTypeOrthography'/>
<enum value='2048' name='NSTextCheckingTypePhoneNumber'/>
<enum value='64' name='NSTextCheckingTypeQuote'/>
<enum value='1024' name='NSTextCheckingTypeRegularExpression'/>
<enum value='256' name='NSTextCheckingTypeReplacement'/>
<enum value='2' name='NSTextCheckingTypeSpelling'/>
<enum value='4096' name='NSTextCheckingTypeTransitInformation'/>
<enum value='978307200.0' name='NSTimeIntervalSince1970'/>
<enum value='2097152' name='NSTimeZoneCalendarUnit'/>
<enum value='2' name='NSTimeZoneNameStyleDaylightSaving'/>
<enum value='4' name='NSTimeZoneNameStyleGeneric'/>
<enum value='3' name='NSTimeZoneNameStyleShortDaylightSaving'/>
<enum value='5' name='NSTimeZoneNameStyleShortGeneric'/>
<enum value='1' name='NSTimeZoneNameStyleShortStandard'/>
<enum value='0' name='NSTimeZoneNameStyleStandard'/>
<enum value='4294967295' value64='18446744073709551615' name='NSUIntegerMax'/>
<enum value='512' name='NSURLBookmarkCreationMinimalBookmark'/>
<enum value='256' name='NSURLBookmarkCreationPreferFileIDResolution'/>
<enum value='1024' name='NSURLBookmarkCreationSuitableForBookmarkFile'/>
<enum value='512' name='NSURLBookmarkResolutionWithoutMounting'/>
<enum value='256' name='NSURLBookmarkResolutionWithoutUI'/>
<enum value='0' name='NSURLCacheStorageAllowed'/>
<enum value='1' name='NSURLCacheStorageAllowedInMemoryOnly'/>
<enum value='2' name='NSURLCacheStorageNotAllowed'/>
<enum value='1' name='NSURLCredentialPersistenceForSession'/>
<enum value='0' name='NSURLCredentialPersistenceNone'/>
<enum value='2' name='NSURLCredentialPersistencePermanent'/>
<enum value='-1011' name='NSURLErrorBadServerResponse'/>
<enum value='-1000' name='NSURLErrorBadURL'/>
<enum value='-1019' name='NSURLErrorCallIsActive'/>
<enum value='-999' name='NSURLErrorCancelled'/>
<enum value='-3002' name='NSURLErrorCannotCloseFile'/>
<enum value='-1004' name='NSURLErrorCannotConnectToHost'/>
<enum value='-3000' name='NSURLErrorCannotCreateFile'/>
<enum value='-1016' name='NSURLErrorCannotDecodeContentData'/>
<enum value='-1015' name='NSURLErrorCannotDecodeRawData'/>
<enum value='-1003' name='NSURLErrorCannotFindHost'/>
<enum value='-2000' name='NSURLErrorCannotLoadFromNetwork'/>
<enum value='-3005' name='NSURLErrorCannotMoveFile'/>
<enum value='-3001' name='NSURLErrorCannotOpenFile'/>
<enum value='-1017' name='NSURLErrorCannotParseResponse'/>
<enum value='-3004' name='NSURLErrorCannotRemoveFile'/>
<enum value='-3003' name='NSURLErrorCannotWriteToFile'/>
<enum value='-1205' name='NSURLErrorClientCertificateRejected'/>
<enum value='-1206' name='NSURLErrorClientCertificateRequired'/>
<enum value='-1006' name='NSURLErrorDNSLookupFailed'/>
<enum value='-1103' name='NSURLErrorDataLengthExceedsMaximum'/>
<enum value='-1020' name='NSURLErrorDataNotAllowed'/>
<enum value='-3006' name='NSURLErrorDownloadDecodingFailedMidStream'/>
<enum value='-3007' name='NSURLErrorDownloadDecodingFailedToComplete'/>
<enum value='-1100' name='NSURLErrorFileDoesNotExist'/>
<enum value='-1101' name='NSURLErrorFileIsDirectory'/>
<enum value='-1007' name='NSURLErrorHTTPTooManyRedirects'/>
<enum value='-1018' name='NSURLErrorInternationalRoamingOff'/>
<enum value='-1005' name='NSURLErrorNetworkConnectionLost'/>
<enum value='-1102' name='NSURLErrorNoPermissionsToReadFile'/>
<enum value='-1009' name='NSURLErrorNotConnectedToInternet'/>
<enum value='-1010' name='NSURLErrorRedirectToNonExistentLocation'/>
<enum value='-1021' name='NSURLErrorRequestBodyStreamExhausted'/>
<enum value='-1008' name='NSURLErrorResourceUnavailable'/>
<enum value='-1200' name='NSURLErrorSecureConnectionFailed'/>
<enum value='-1201' name='NSURLErrorServerCertificateHasBadDate'/>
<enum value='-1203' name='NSURLErrorServerCertificateHasUnknownRoot'/>
<enum value='-1204' name='NSURLErrorServerCertificateNotYetValid'/>
<enum value='-1202' name='NSURLErrorServerCertificateUntrusted'/>
<enum value='-1001' name='NSURLErrorTimedOut'/>
<enum value='-1' name='NSURLErrorUnknown'/>
<enum value='-1002' name='NSURLErrorUnsupportedURL'/>
<enum value='-1013' name='NSURLErrorUserAuthenticationRequired'/>
<enum value='-1012' name='NSURLErrorUserCancelledAuthentication'/>
<enum value='-1014' name='NSURLErrorZeroByteResource'/>
<enum value='3' name='NSURLNetworkServiceTypeBackground'/>
<enum value='0' name='NSURLNetworkServiceTypeDefault'/>
<enum value='2' name='NSURLNetworkServiceTypeVideo'/>
<enum value='1' name='NSURLNetworkServiceTypeVoIP'/>
<enum value='4' name='NSURLNetworkServiceTypeVoice'/>
<enum value='1' name='NSURLRequestReloadIgnoringCacheData'/>
<enum value='4' name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData'/>
<enum value='1' name='NSURLRequestReloadIgnoringLocalCacheData'/>
<enum value='5' name='NSURLRequestReloadRevalidatingCacheData'/>
<enum value='3' name='NSURLRequestReturnCacheDataDontLoad'/>
<enum value='2' name='NSURLRequestReturnCacheDataElseLoad'/>
<enum value='0' name='NSURLRequestUseProtocolCachePolicy'/>
<enum value='-1' name='NSURLResponseUnknownLength'/>
<enum value='2415919360' name='NSUTF16BigEndianStringEncoding'/>
<enum value='2483028224' name='NSUTF16LittleEndianStringEncoding'/>
<enum value='10' name='NSUTF16StringEncoding'/>
<enum value='2550137088' name='NSUTF32BigEndianStringEncoding'/>
<enum value='2617245952' name='NSUTF32LittleEndianStringEncoding'/>
<enum value='2348810496' name='NSUTF32StringEncoding'/>
<enum value='4' name='NSUTF8StringEncoding'/>
<enum value='1' name='NSUbiquitousKeyValueStoreInitialSyncChange'/>
<enum value='2' name='NSUbiquitousKeyValueStoreQuotaViolationChange'/>
<enum value='0' name='NSUbiquitousKeyValueStoreServerChange'/>
<enum value='2' name='NSUncachedRead'/>
<enum value='2147483647' value64='9223372036854775807' name='NSUndefinedDateComponent'/>
<enum value='350000' name='NSUndoCloseGroupingRunLoopOrdering'/>
<enum value='10' name='NSUnicodeStringEncoding'/>
<enum value='5' name='NSUnionSetExpressionType'/>
<enum value='3072' name='NSUserCancelledError'/>
<enum value='7' name='NSUserDirectory'/>
<enum value='1' name='NSUserDomainMask'/>
<enum value='2047' name='NSValidationErrorMaximum'/>
<enum value='1024' name='NSValidationErrorMinimum'/>
<enum value='2' name='NSVariableExpressionType'/>
<enum value='4' name='NSVolumeEnumerationProduceFileReferenceURLs'/>
<enum value='2' name='NSVolumeEnumerationSkipHiddenVolumes'/>
<enum value='256' name='NSWeekCalendarUnit'/>
<enum value='4096' name='NSWeekOfMonthCalendarUnit'/>
<enum value='8192' name='NSWeekOfYearCalendarUnit'/>
<enum value='512' name='NSWeekdayCalendarUnit'/>
<enum value='1024' name='NSWeekdayOrdinalCalendarUnit'/>
<enum value='256' name='NSWidthInsensitiveSearch'/>
<enum value='2' name='NSWindows95OperatingSystem'/>
<enum value='15' name='NSWindowsCP1250StringEncoding'/>
<enum value='11' name='NSWindowsCP1251StringEncoding'/>
<enum value='12' name='NSWindowsCP1252StringEncoding'/>
<enum value='13' name='NSWindowsCP1253StringEncoding'/>
<enum value='14' name='NSWindowsCP1254StringEncoding'/>
<enum value='1' name='NSWindowsNTOperatingSystem'/>
<enum value='1' name='NSWrapCalendarComponents'/>
<enum value='41' name='NSXMLParserAttributeHasNoValueError'/>
<enum value='51' name='NSXMLParserAttributeListNotFinishedError'/>
<enum value='50' name='NSXMLParserAttributeListNotStartedError'/>
<enum value='40' name='NSXMLParserAttributeNotFinishedError'/>
<enum value='39' name='NSXMLParserAttributeNotStartedError'/>
<enum value='42' name='NSXMLParserAttributeRedefinedError'/>
<enum value='63' name='NSXMLParserCDATANotFinishedError'/>
<enum value='10' name='NSXMLParserCharacterRefAtEOFError'/>
<enum value='13' name='NSXMLParserCharacterRefInDTDError'/>
<enum value='12' name='NSXMLParserCharacterRefInEpilogError'/>
<enum value='11' name='NSXMLParserCharacterRefInPrologError'/>
<enum value='80' name='NSXMLParserCommentContainsDoubleHyphenError'/>
<enum value='45' name='NSXMLParserCommentNotFinishedError'/>
<enum value='59' name='NSXMLParserConditionalSectionNotFinishedError'/>
<enum value='58' name='NSXMLParserConditionalSectionNotStartedError'/>
<enum value='61' name='NSXMLParserDOCTYPEDeclNotFinishedError'/>
<enum value='512' name='NSXMLParserDelegateAbortedParseError'/>
<enum value='3' name='NSXMLParserDocumentStartError'/>
<enum value='55' name='NSXMLParserElementContentDeclNotFinishedError'/>
<enum value='54' name='NSXMLParserElementContentDeclNotStartedError'/>
<enum value='4' name='NSXMLParserEmptyDocumentError'/>
<enum value='32' name='NSXMLParserEncodingNotSupportedError'/>
<enum value='90' name='NSXMLParserEntityBoundaryError'/>
<enum value='29' name='NSXMLParserEntityIsExternalError'/>
<enum value='30' name='NSXMLParserEntityIsParameterError'/>
<enum value='37' name='NSXMLParserEntityNotFinishedError'/>
<enum value='36' name='NSXMLParserEntityNotStartedError'/>
<enum value='14' name='NSXMLParserEntityRefAtEOFError'/>
<enum value='17' name='NSXMLParserEntityRefInDTDError'/>
<enum value='16' name='NSXMLParserEntityRefInEpilogError'/>
<enum value='15' name='NSXMLParserEntityRefInPrologError'/>
<enum value='89' name='NSXMLParserEntityRefLoopError'/>
<enum value='23' name='NSXMLParserEntityReferenceMissingSemiError'/>
<enum value='22' name='NSXMLParserEntityReferenceWithoutNameError'/>
<enum value='84' name='NSXMLParserEntityValueRequiredError'/>
<enum value='75' name='NSXMLParserEqualExpectedError'/>
<enum value='82' name='NSXMLParserExternalStandaloneEntityError'/>
<enum value='60' name='NSXMLParserExternalSubsetNotFinishedError'/>
<enum value='86' name='NSXMLParserExtraContentError'/>
<enum value='73' name='NSXMLParserGTRequiredError'/>
<enum value='1' name='NSXMLParserInternalError'/>
<enum value='9' name='NSXMLParserInvalidCharacterError'/>
<enum value='87' name='NSXMLParserInvalidCharacterInEntityError'/>
<enum value='8' name='NSXMLParserInvalidCharacterRefError'/>
<enum value='83' name='NSXMLParserInvalidConditionalSectionError'/>
<enum value='7' name='NSXMLParserInvalidDecimalCharacterRefError'/>
<enum value='81' name='NSXMLParserInvalidEncodingError'/>
<enum value='79' name='NSXMLParserInvalidEncodingNameError'/>
<enum value='6' name='NSXMLParserInvalidHexCharacterRefError'/>
<enum value='91' name='NSXMLParserInvalidURIError'/>
<enum value='72' name='NSXMLParserLTRequiredError'/>
<enum value='74' name='NSXMLParserLTSlashRequiredError'/>
<enum value='38' name='NSXMLParserLessThanSymbolInAttributeError'/>
<enum value='44' name='NSXMLParserLiteralNotFinishedError'/>
<enum value='43' name='NSXMLParserLiteralNotStartedError'/>
<enum value='62' name='NSXMLParserMisplacedCDATAEndStringError'/>
<enum value='64' name='NSXMLParserMisplacedXMLDeclarationError'/>
<enum value='53' name='NSXMLParserMixedContentDeclNotFinishedError'/>
<enum value='52' name='NSXMLParserMixedContentDeclNotStartedError'/>
<enum value='68' name='NSXMLParserNAMERequiredError'/>
<enum value='67' name='NSXMLParserNMTOKENRequiredError'/>
<enum value='35' name='NSXMLParserNamespaceDeclarationError'/>
<enum value='94' name='NSXMLParserNoDTDError'/>
<enum value='85' name='NSXMLParserNotWellBalancedError'/>
<enum value='49' name='NSXMLParserNotationNotFinishedError'/>
<enum value='48' name='NSXMLParserNotationNotStartedError'/>
<enum value='2' name='NSXMLParserOutOfMemoryError'/>
<enum value='69' name='NSXMLParserPCDATARequiredError'/>
<enum value='18' name='NSXMLParserParsedEntityRefAtEOFError'/>
<enum value='20' name='NSXMLParserParsedEntityRefInEpilogError'/>
<enum value='88' name='NSXMLParserParsedEntityRefInInternalError'/>
<enum value='21' name='NSXMLParserParsedEntityRefInInternalSubsetError'/>
<enum value='19' name='NSXMLParserParsedEntityRefInPrologError'/>
<enum value='25' name='NSXMLParserParsedEntityRefMissingSemiError'/>
<enum value='24' name='NSXMLParserParsedEntityRefNoNameError'/>
<enum value='5' name='NSXMLParserPrematureDocumentEndError'/>
<enum value='47' name='NSXMLParserProcessingInstructionNotFinishedError'/>
<enum value='46' name='NSXMLParserProcessingInstructionNotStartedError'/>
<enum value='71' name='NSXMLParserPublicIdentifierRequiredError'/>
<enum value='66' name='NSXMLParserSeparatorRequiredError'/>
<enum value='65' name='NSXMLParserSpaceRequiredError'/>
<enum value='78' name='NSXMLParserStandaloneValueError'/>
<enum value='34' name='NSXMLParserStringNotClosedError'/>
<enum value='33' name='NSXMLParserStringNotStartedError'/>
<enum value='76' name='NSXMLParserTagNameMismatchError'/>
<enum value='92' name='NSXMLParserURIFragmentError'/>
<enum value='70' name='NSXMLParserURIRequiredError'/>
<enum value='26' name='NSXMLParserUndeclaredEntityError'/>
<enum value='77' name='NSXMLParserUnfinishedTagError'/>
<enum value='31' name='NSXMLParserUnknownEncodingError'/>
<enum value='28' name='NSXMLParserUnparsedEntityError'/>
<enum value='57' name='NSXMLParserXMLDeclNotFinishedError'/>
<enum value='56' name='NSXMLParserXMLDeclNotStartedError'/>
<enum value='4' name='NSYearCalendarUnit'/>
<enum value='16384' name='NSYearForWeekOfYearCalendarUnit'/>
<enum value='1' name='NS_BLOCKS_AVAILABLE'/>
<enum value='2' name='NS_BigEndian'/>
<enum value='1' name='NS_LittleEndian'/>
<enum value='0' name='NS_UNICHAR_IS_EIGHT_BIT'/>
<enum value='0' name='NS_UnknownByteOrder'/>
<function inline='true' name='CFBridgingRelease'>
<arg type='@'/>
<retval type='@'/>
</function>
<function inline='true' name='CFBridgingRetain'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSAllocateCollectable'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='^v'/>
</function>
<function name='NSAllocateMemoryPages'>
<arg type='I' type64='Q'/>
<retval type='^v'/>
</function>
<function name='NSAllocateObject'>
<arg type='#'/>
<arg type='I' type64='Q'/>
<arg type='^{_NSZone=}'/>
<retval type='@'/>
</function>
<function name='NSClassFromString'>
<arg type='@'/>
<retval type='#'/>
</function>
<function inline='true' name='NSConvertHostDoubleToSwapped'>
<arg type='d'/>
<retval type='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSConvertHostFloatToSwapped'>
<arg type='f'/>
<retval type='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSConvertSwappedDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}'/>
<retval type='d'/>
</function>
<function inline='true' name='NSConvertSwappedFloatToHost'>
<arg type='{_NSSwappedFloat=I}'/>
<retval type='f'/>
</function>
<function name='NSCopyMemoryPages'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='I' type64='Q'/>
</function>
<function name='NSCopyObject'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^{_NSZone=}'/>
<retval type='@'/>
</function>
<function name='NSCreateZone'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='B'/>
<retval type='^{_NSZone=}'/>
</function>
<function name='NSDeallocateMemoryPages'>
<arg type='^v'/>
<arg type='I' type64='Q'/>
</function>
<function name='NSDeallocateObject'>
<arg type='@'/>
</function>
<function name='NSDecimalAdd'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSDecimalCompact'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='NSDecimalCompare'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type='i' type64='q'/>
</function>
<function name='NSDecimalCopy'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='NSDecimalDivide'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function inline='true' name='NSDecimalIsNotANumber'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type='B'/>
</function>
<function name='NSDecimalMultiply'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSDecimalMultiplyByPowerOf10'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='s'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSDecimalNormalize'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSDecimalPower'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSDecimalRound'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='i' type64='q'/>
<arg type='I' type64='Q'/>
</function>
<function name='NSDecimalString'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSDecimalSubtract'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSDecrementExtraRefCountWasZero'>
<arg type='@'/>
<retval type='B'/>
</function>
<function name='NSDefaultMallocZone'>
<retval type='^{_NSZone=}'/>
</function>
<function inline='true' name='NSEqualRanges'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval type='B'/>
</function>
<function name='NSExtraRefCount'>
<arg type='@'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSFullUserName'>
<retval type='@'/>
</function>
<function name='NSGetSizeAndAlignment'>
<arg type='*'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<retval type='*'/>
</function>
<function name='NSGetUncaughtExceptionHandler'>
<retval type='^?' function_pointer='true'>
<arg type='@'/>
<retval type='v'/>
</retval>
</function>
<function name='NSHomeDirectory'>
<retval type='@'/>
</function>
<function name='NSHomeDirectoryForUser'>
<arg type='@'/>
<retval type='@'/>
</function>
<function inline='true' name='NSHostByteOrder'>
<retval type='l' type64='q'/>
</function>
<function name='NSIncrementExtraRefCount'>
<arg type='@'/>
</function>
<function name='NSIntersectionRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function inline='true' name='NSLocationInRange'>
<arg type='I' type64='Q'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval type='B'/>
</function>
<function variadic='true' name='NSLog'>
<arg type='@' printf_format='true'/>
</function>
<function name='NSLogPageSize'>
<retval type='I' type64='Q'/>
</function>
<function name='NSLogv'>
<arg type='@' printf_format='true'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
</function>
<function inline='true' name='NSMakeCollectable'>
<arg type='@'/>
<retval type='@'/>
</function>
<function inline='true' name='NSMakeRange'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function inline='true' name='NSMaxRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSOpenStepRootDirectory'>
<retval type='@'/>
</function>
<function name='NSPageSize'>
<retval type='I' type64='Q'/>
</function>
<function name='NSProtocolFromString'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSRangeFromString'>
<arg type='@'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='NSRealMemoryAvailable'>
<retval type='I' type64='Q'/>
</function>
<function name='NSReallocateCollectable'>
<arg type='^v'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='^v'/>
</function>
<function name='NSRecycleZone'>
<arg type='^{_NSZone=}'/>
</function>
<function name='NSRoundDownToMultipleOfPageSize'>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSRoundUpToMultipleOfPageSize'>
<arg type='I' type64='Q'/>
<retval type='I' type64='Q'/>
</function>
<function name='NSSearchPathForDirectoriesInDomains'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='B'/>
<retval type='@'/>
</function>
<function name='NSSelectorFromString'>
<arg type='@'/>
<retval type=':'/>
</function>
<function name='NSSetUncaughtExceptionHandler'>
<arg type='^?' function_pointer='true'>
<arg type='@'/>
<retval type='v'/>
</arg>
</function>
<function name='NSSetZoneName'>
<arg type='^{_NSZone=}'/>
<arg type='@'/>
</function>
<function name='NSShouldRetainWithZone'>
<arg type='@'/>
<arg type='^{_NSZone=}'/>
<retval type='B'/>
</function>
<function name='NSStringFromClass'>
<arg type='#'/>
<retval type='@'/>
</function>
<function name='NSStringFromProtocol'>
<arg type='@'/>
<retval type='@'/>
</function>
<function name='NSStringFromRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval type='@'/>
</function>
<function name='NSStringFromSelector'>
<arg type=':'/>
<retval type='@'/>
</function>
<function inline='true' name='NSSwapBigDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}'/>
<retval type='d'/>
</function>
<function inline='true' name='NSSwapBigFloatToHost'>
<arg type='{_NSSwappedFloat=I}'/>
<retval type='f'/>
</function>
<function inline='true' name='NSSwapBigIntToHost'>
<arg type='I'/>
<retval type='I'/>
</function>
<function inline='true' name='NSSwapBigLongLongToHost'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function inline='true' name='NSSwapBigLongToHost'>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function inline='true' name='NSSwapBigShortToHost'>
<arg type='S'/>
<retval type='S'/>
</function>
<function inline='true' name='NSSwapDouble'>
<arg type='{_NSSwappedDouble=Q}'/>
<retval type='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSSwapFloat'>
<arg type='{_NSSwappedFloat=I}'/>
<retval type='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSSwapHostDoubleToBig'>
<arg type='d'/>
<retval type='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSSwapHostDoubleToLittle'>
<arg type='d'/>
<retval type='{_NSSwappedDouble=Q}'/>
</function>
<function inline='true' name='NSSwapHostFloatToBig'>
<arg type='f'/>
<retval type='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSSwapHostFloatToLittle'>
<arg type='f'/>
<retval type='{_NSSwappedFloat=I}'/>
</function>
<function inline='true' name='NSSwapHostIntToBig'>
<arg type='I'/>
<retval type='I'/>
</function>
<function inline='true' name='NSSwapHostIntToLittle'>
<arg type='I'/>
<retval type='I'/>
</function>
<function inline='true' name='NSSwapHostLongLongToBig'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function inline='true' name='NSSwapHostLongLongToLittle'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function inline='true' name='NSSwapHostLongToBig'>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function inline='true' name='NSSwapHostLongToLittle'>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function inline='true' name='NSSwapHostShortToBig'>
<arg type='S'/>
<retval type='S'/>
</function>
<function inline='true' name='NSSwapHostShortToLittle'>
<arg type='S'/>
<retval type='S'/>
</function>
<function inline='true' name='NSSwapInt'>
<arg type='I'/>
<retval type='I'/>
</function>
<function inline='true' name='NSSwapLittleDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}'/>
<retval type='d'/>
</function>
<function inline='true' name='NSSwapLittleFloatToHost'>
<arg type='{_NSSwappedFloat=I}'/>
<retval type='f'/>
</function>
<function inline='true' name='NSSwapLittleIntToHost'>
<arg type='I'/>
<retval type='I'/>
</function>
<function inline='true' name='NSSwapLittleLongLongToHost'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function inline='true' name='NSSwapLittleLongToHost'>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function inline='true' name='NSSwapLittleShortToHost'>
<arg type='S'/>
<retval type='S'/>
</function>
<function inline='true' name='NSSwapLong'>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function inline='true' name='NSSwapLongLong'>
<arg type='Q'/>
<retval type='Q'/>
</function>
<function inline='true' name='NSSwapShort'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='NSTemporaryDirectory'>
<retval type='@'/>
</function>
<function name='NSUnionRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='NSUserName'>
<retval type='@'/>
</function>
<function name='NSZoneCalloc'>
<arg type='^{_NSZone=}'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='^v'/>
</function>
<function name='NSZoneFree'>
<arg type='^{_NSZone=}'/>
<arg type='^v'/>
</function>
<function name='NSZoneFromPointer'>
<arg type='^v'/>
<retval type='^{_NSZone=}'/>
</function>
<function name='NSZoneMalloc'>
<arg type='^{_NSZone=}'/>
<arg type='I' type64='Q'/>
<retval type='^v'/>
</function>
<function name='NSZoneName'>
<arg type='^{_NSZone=}'/>
<retval type='@'/>
</function>
<function name='NSZoneRealloc'>
<arg type='^{_NSZone=}'/>
<arg type='^v'/>
<arg type='I' type64='Q'/>
<retval type='^v'/>
</function>
<function name='NXReadNSObjectFromCoder'>
<arg type='@'/>
<retval type='@'/>
</function>
<class name='NSArray'>
<method class_method='true' variadic='true' sentinel='0' selector='arrayWithObjects:'/>
<method selector='containsObject:'>
<retval type='B'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='initWithArray:copyItems:'>
<arg type='B' index='1'/>
</method>
<method variadic='true' sentinel='0' selector='initWithObjects:'/>
<method selector='isEqualToArray:'>
<retval type='B'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortedArrayUsingFunction:context:'>
<arg type='^?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<arg type='^v'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortedArrayUsingFunction:context:hint:'>
<arg type='^?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<arg type='^v'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='writeToFile:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
</class>
<class name='NSAssertionHandler'>
<method variadic='true' selector='handleFailureInFunction:file:lineNumber:description:'/>
<method variadic='true' selector='handleFailureInMethod:object:file:lineNumber:description:'/>
</class>
<class name='NSAttributedString'>
<method selector='enumerateAttribute:inRange:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateAttributesInRange:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='isEqualToAttributedString:'>
<retval type='B'/>
</method>
</class>
<class name='NSBlockOperation'>
<method selector='addExecutionBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='blockOperationWithBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSBundle'>
<method selector='isLoaded'>
<retval type='B'/>
</method>
<method selector='load'>
<retval type='B'/>
</method>
<method selector='loadAndReturnError:'>
<retval type='B'/>
</method>
<method selector='preflightAndReturnError:'>
<retval type='B'/>
</method>
<method selector='unload'>
<retval type='B'/>
</method>
</class>
<class name='NSCache'>
<method selector='evictsObjectsWithDiscardedContent'>
<retval type='B'/>
</method>
<method selector='setEvictsObjectsWithDiscardedContent:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSCalendar'>
<method selector='rangeOfUnit:startDate:interval:forDate:'>
<retval type='B'/>
</method>
</class>
<class name='NSCharacterSet'>
<method selector='characterIsMember:'>
<retval type='B'/>
</method>
<method selector='hasMemberInPlane:'>
<retval type='B'/>
</method>
<method selector='isSupersetOfSet:'>
<retval type='B'/>
</method>
<method selector='longCharacterIsMember:'>
<retval type='B'/>
</method>
</class>
<class name='NSCoder'>
<method selector='allowsKeyedCoding'>
<retval type='B'/>
</method>
<method selector='containsValueForKey:'>
<retval type='B'/>
</method>
<method selector='decodeBoolForKey:'>
<retval type='B'/>
</method>
<method selector='encodeBool:forKey:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSCondition'>
<method selector='waitUntilDate:'>
<retval type='B'/>
</method>
</class>
<class name='NSConditionLock'>
<method selector='lockBeforeDate:'>
<retval type='B'/>
</method>
<method selector='lockWhenCondition:beforeDate:'>
<retval type='B'/>
</method>
<method selector='tryLock'>
<retval type='B'/>
</method>
<method selector='tryLockWhenCondition:'>
<retval type='B'/>
</method>
</class>
<class name='NSData'>
<method class_method='true' selector='dataWithBytesNoCopy:length:freeWhenDone:'>
<arg type='B' index='2'/>
</method>
<method selector='initWithBytesNoCopy:length:freeWhenDone:'>
<arg type='B' index='2'/>
</method>
<method selector='isEqualToData:'>
<retval type='B'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToFile:options:error:'>
<retval type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToURL:options:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSDate'>
<method selector='isEqualToDate:'>
<retval type='B'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='allowsNaturalLanguage'>
<retval type='B'/>
</method>
<method selector='doesRelativeDateFormatting'>
<retval type='B'/>
</method>
<method selector='generatesCalendarDates'>
<retval type='B'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg type_modifier='o' index='0'/>
<arg type_modifier='N' index='2'/>
<arg type_modifier='o' index='3'/>
<retval type='B'/>
</method>
<method selector='initWithDateFormat:allowNaturalLanguage:'>
<arg type='B' index='1'/>
</method>
<method selector='isLenient'>
<retval type='B'/>
</method>
<method selector='setDoesRelativeDateFormatting:'>
<arg type='B' index='0'/>
</method>
<method selector='setGeneratesCalendarDates:'>
<arg type='B' index='0'/>
</method>
<method selector='setLenient:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSDecimalNumber'>
<method class_method='true' selector='decimalNumberWithDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' index='0'/>
</method>
<method class_method='true' selector='decimalNumberWithMantissa:exponent:isNegative:'>
<arg type='B' index='2'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='initWithDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' index='0'/>
</method>
<method selector='initWithMantissa:exponent:isNegative:'>
<arg type='B' index='2'/>
</method>
</class>
<class name='NSDecimalNumberHandler'>
<method class_method='true' selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg type='B' index='2'/>
<arg type='B' index='3'/>
<arg type='B' index='4'/>
<arg type='B' index='5'/>
</method>
<method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg type='B' index='2'/>
<arg type='B' index='3'/>
<arg type='B' index='4'/>
<arg type='B' index='5'/>
</method>
</class>
<class name='NSDictionary'>
<method class_method='true' variadic='true' sentinel='0' selector='dictionaryWithObjectsAndKeys:'/>
<method selector='enumerateKeysAndObjectsUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateKeysAndObjectsWithOptions:usingBlock:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='fileExtensionHidden'>
<retval type='B'/>
</method>
<method selector='fileIsAppendOnly'>
<retval type='B'/>
</method>
<method selector='fileIsImmutable'>
<retval type='B'/>
</method>
<method selector='initWithDictionary:copyItems:'>
<arg type='B' index='1'/>
</method>
<method variadic='true' sentinel='0' selector='initWithObjectsAndKeys:'/>
<method selector='isEqualToDictionary:'>
<retval type='B'/>
</method>
<method selector='keysOfEntriesPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='keysOfEntriesWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='keysSortedByValueUsingComparator:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='keysSortedByValueWithOptions:usingComparator:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='writeToFile:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
</class>
<class name='NSException'>
<method class_method='true' variadic='true' selector='raise:format:'/>
<method class_method='true' selector='raise:format:arguments:'/>
</class>
<class name='NSExpression'>
<method class_method='true' selector='expressionForBlock:arguments:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='@'/>
</arg>
</method>
</class>
<class name='NSFileCoordinator'>
<method selector='coordinateReadingItemAtURL:options:error:byAccessor:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg type='@?' function_pointer='true' index='5'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='coordinateWritingItemAtURL:options:error:byAccessor:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg type='@?' function_pointer='true' index='5'>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:'>
<arg type='@?' function_pointer='true' index='5'>
<arg type='@?'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSFileHandle'>
<method selector='initWithFileDescriptor:closeOnDealloc:'>
<arg type='B' index='1'/>
</method>
<method selector='setReadabilityHandler:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='setWriteabilityHandler:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSFileManager'>
<method selector='URLForDirectory:inDomain:appropriateForURL:create:error:'>
<arg type='B' index='3'/>
</method>
<method selector='changeCurrentDirectoryPath:'>
<retval type='B'/>
</method>
<method selector='changeFileAttributes:atPath:'>
<retval type='B'/>
</method>
<method selector='contentsEqualAtPath:andPath:'>
<retval type='B'/>
</method>
<method selector='copyItemAtPath:toPath:error:'>
<retval type='B'/>
</method>
<method selector='copyItemAtURL:toURL:error:'>
<retval type='B'/>
</method>
<method selector='copyPath:toPath:handler:'>
<retval type='B'/>
</method>
<method selector='createDirectoryAtPath:attributes:'>
<retval type='B'/>
</method>
<method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='createDirectoryAtURL:withIntermediateDirectories:attributes:error:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='createFileAtPath:contents:attributes:'>
<retval type='B'/>
</method>
<method selector='createSymbolicLinkAtPath:pathContent:'>
<retval type='B'/>
</method>
<method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
<retval type='B'/>
</method>
<method selector='createSymbolicLinkAtURL:withDestinationURL:error:'>
<retval type='B'/>
</method>
<method selector='enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<arg type='@'/>
<retval type='B'/>
</arg>
</method>
<method selector='evictUbiquitousItemAtURL:error:'>
<retval type='B'/>
</method>
<method selector='fileAttributesAtPath:traverseLink:'>
<arg type='B' index='1'/>
</method>
<method selector='fileExistsAtPath:'>
<retval type='B'/>
</method>
<method selector='fileExistsAtPath:isDirectory:'>
<arg type='^B' index='1'/>
<retval type='B'/>
</method>
<method selector='isDeletableFileAtPath:'>
<retval type='B'/>
</method>
<method selector='isExecutableFileAtPath:'>
<retval type='B'/>
</method>
<method selector='isReadableFileAtPath:'>
<retval type='B'/>
</method>
<method selector='isUbiquitousItemAtURL:'>
<retval type='B'/>
</method>
<method selector='isWritableFileAtPath:'>
<retval type='B'/>
</method>
<method selector='linkItemAtPath:toPath:error:'>
<retval type='B'/>
</method>
<method selector='linkItemAtURL:toURL:error:'>
<retval type='B'/>
</method>
<method selector='linkPath:toPath:handler:'>
<retval type='B'/>
</method>
<method selector='moveItemAtPath:toPath:error:'>
<retval type='B'/>
</method>
<method selector='moveItemAtURL:toURL:error:'>
<retval type='B'/>
</method>
<method selector='movePath:toPath:handler:'>
<retval type='B'/>
</method>
<method selector='removeFileAtPath:handler:'>
<retval type='B'/>
</method>
<method selector='removeItemAtPath:error:'>
<retval type='B'/>
</method>
<method selector='removeItemAtURL:error:'>
<retval type='B'/>
</method>
<method selector='replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:'>
<retval type='B'/>
</method>
<method selector='setAttributes:ofItemAtPath:error:'>
<retval type='B'/>
</method>
<method selector='setUbiquitous:itemAtURL:destinationURL:error:'>
<arg type='B' index='0'/>
<retval type='B'/>
</method>
<method selector='startDownloadingUbiquitousItemAtURL:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSFileVersion'>
<method selector='isConflict'>
<retval type='B'/>
</method>
<method selector='isDiscardable'>
<retval type='B'/>
</method>
<method selector='isResolved'>
<retval type='B'/>
</method>
<method selector='removeAndReturnError:'>
<retval type='B'/>
</method>
<method class_method='true' selector='removeOtherVersionsOfItemAtURL:error:'>
<retval type='B'/>
</method>
<method selector='setDiscardable:'>
<arg type='B' index='0'/>
</method>
<method selector='setResolved:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='isDirectory'>
<retval type='B'/>
</method>
<method selector='isRegularFile'>
<retval type='B'/>
</method>
<method selector='isSymbolicLink'>
<retval type='B'/>
</method>
<method selector='matchesContentsOfURL:'>
<retval type='B'/>
</method>
<method selector='needsToBeUpdatedFromPath:'>
<retval type='B'/>
</method>
<method selector='readFromURL:options:error:'>
<retval type='B'/>
</method>
<method selector='updateFromPath:'>
<retval type='B'/>
</method>
<method selector='writeToFile:atomically:updateFilenames:'>
<arg type='B' index='1'/>
<arg type='B' index='2'/>
<retval type='B'/>
</method>
<method selector='writeToURL:options:originalContentsURL:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSFormatter'>
<method selector='getObjectValue:forString:errorDescription:'>
<arg type_modifier='o' index='0'/>
<arg type_modifier='o' index='2'/>
<retval type='B'/>
</method>
<method selector='isPartialStringValid:newEditingString:errorDescription:'>
<retval type='B'/>
</method>
<method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
<retval type='B'/>
</method>
</class>
<class name='NSHTTPCookie'>
<method selector='isHTTPOnly'>
<retval type='B'/>
</method>
<method selector='isSecure'>
<retval type='B'/>
</method>
<method selector='isSessionOnly'>
<retval type='B'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='containsIndex:'>
<retval type='B'/>
</method>
<method selector='containsIndexes:'>
<retval type='B'/>
</method>
<method selector='containsIndexesInRange:'>
<retval type='B'/>
</method>
<method selector='enumerateIndexesInRange:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateIndexesUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateIndexesWithOptions:usingBlock:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateRangesInRange:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateRangesUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateRangesWithOptions:usingBlock:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='indexInRange:options:passingTest:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesInRange:options:passingTest:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='intersectsIndexesInRange:'>
<retval type='B'/>
</method>
<method selector='isEqualToIndexSet:'>
<retval type='B'/>
</method>
</class>
<class name='NSInputStream'>
<method selector='getBuffer:length:'>
<retval type='B'/>
</method>
<method selector='hasBytesAvailable'>
<retval type='B'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='argumentsRetained'>
<retval type='B'/>
</method>
</class>
<class name='NSJSONSerialization'>
<method class_method='true' selector='isValidJSONObject:'>
<retval type='B'/>
</method>
</class>
<class name='NSKeyedArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<retval type='B'/>
</method>
<method selector='encodeBool:forKey:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSKeyedUnarchiver'>
<method selector='containsValueForKey:'>
<retval type='B'/>
</method>
<method selector='decodeBoolForKey:'>
<retval type='B'/>
</method>
</class>
<class name='NSLinguisticTagger'>
<method selector='enumerateTagsInRange:scheme:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSLock'>
<method selector='lockBeforeDate:'>
<retval type='B'/>
</method>
<method selector='tryLock'>
<retval type='B'/>
</method>
</class>
<class name='NSMetadataQuery'>
<method selector='isGathering'>
<retval type='B'/>
</method>
<method selector='isStarted'>
<retval type='B'/>
</method>
<method selector='isStopped'>
<retval type='B'/>
</method>
<method selector='startQuery'>
<retval type='B'/>
</method>
</class>
<class name='NSMethodSignature'>
<method selector='isOneway'>
<retval type='B'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='sortUsingComparator:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortUsingFunction:context:'>
<arg type='^?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<arg type='^v'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
</class>
<class name='NSMutableOrderedSet'>
<method selector='sortRange:options:usingComparator:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortUsingComparator:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
</class>
<class name='NSMutableString'>
<method variadic='true' selector='appendFormat:'/>
</class>
<class name='NSMutableURLRequest'>
<method selector='setHTTPShouldHandleCookies:'>
<arg type='B' index='0'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSNetService'>
<method selector='getInputStream:outputStream:'>
<retval type='B'/>
</method>
<method selector='setTXTRecordData:'>
<retval type='B'/>
</method>
</class>
<class name='NSNotificationCenter'>
<method selector='addObserverForName:object:queue:usingBlock:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSNumber'>
<method selector='boolValue'>
<retval type='B'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='initWithBool:'>
<arg type='B' index='0'/>
</method>
<method selector='isEqualToNumber:'>
<retval type='B'/>
</method>
<method class_method='true' selector='numberWithBool:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSNumberFormatter'>
<method selector='allowsFloats'>
<retval type='B'/>
</method>
<method selector='alwaysShowsDecimalSeparator'>
<retval type='B'/>
</method>
<method selector='generatesDecimalNumbers'>
<retval type='B'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg type_modifier='o' index='0'/>
<arg type_modifier='N' index='2'/>
<arg type_modifier='o' index='3'/>
<retval type='B'/>
</method>
<method selector='hasThousandSeparators'>
<retval type='B'/>
</method>
<method selector='isLenient'>
<retval type='B'/>
</method>
<method selector='isPartialStringValidationEnabled'>
<retval type='B'/>
</method>
<method selector='localizesFormat'>
<retval type='B'/>
</method>
<method selector='setAllowsFloats:'>
<arg type='B' index='0'/>
</method>
<method selector='setAlwaysShowsDecimalSeparator:'>
<arg type='B' index='0'/>
</method>
<method selector='setGeneratesDecimalNumbers:'>
<arg type='B' index='0'/>
</method>
<method selector='setHasThousandSeparators:'>
<arg type='B' index='0'/>
</method>
<method selector='setLenient:'>
<arg type='B' index='0'/>
</method>
<method selector='setLocalizesFormat:'>
<arg type='B' index='0'/>
</method>
<method selector='setPartialStringValidationEnabled:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesGroupingSeparator:'>
<arg type='B' index='0'/>
</method>
<method selector='setUsesSignificantDigits:'>
<arg type='B' index='0'/>
</method>
<method selector='usesGroupingSeparator'>
<retval type='B'/>
</method>
<method selector='usesSignificantDigits'>
<retval type='B'/>
</method>
</class>
<class name='NSObject'>
<method class_method='true' selector='accessInstanceVariablesDirectly'>
<retval type='B'/>
</method>
<method selector='accommodatePresentedItemDeletionWithCompletionHandler:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method selector='attemptRecoveryFromError:optionIndex:'>
<retval type='B'/>
</method>
<method class_method='true' selector='automaticallyNotifiesObserversForKey:'>
<retval type='B'/>
</method>
<method selector='beginContentAccess'>
<retval type='B'/>
</method>
<method class_method='true' selector='conformsToProtocol:'>
<retval type='B'/>
</method>
<method selector='conformsToProtocol:'>
<retval type='B'/>
</method>
<method selector='connection:canAuthenticateAgainstProtectionSpace:'>
<retval type='B'/>
</method>
<method selector='connectionShouldUseCredentialStorage:'>
<retval type='B'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' type='^{_NSFastEnumerationState=L^@^L[5L]}' index='0'/>
</method>
<method selector='fileManager:shouldCopyItemAtPath:toPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldCopyItemAtURL:toURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldLinkItemAtURL:toURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldMoveItemAtURL:toURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:'>
<retval type='B'/>
</method>
<method selector='fileManager:shouldRemoveItemAtURL:'>
<retval type='B'/>
</method>
<method class_method='true' selector='instancesRespondToSelector:'>
<retval type='B'/>
</method>
<method selector='isContentDiscarded'>
<retval type='B'/>
</method>
<method selector='isEqual:'>
<retval type='B'/>
</method>
<method selector='isKindOfClass:'>
<retval type='B'/>
</method>
<method selector='isMemberOfClass:'>
<retval type='B'/>
</method>
<method selector='isProxy'>
<retval type='B'/>
</method>
<method class_method='true' selector='isSubclassOfClass:'>
<retval type='B'/>
</method>
<method selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg type='B' index='2'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:'>
<arg type='B' index='2'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg type='B' index='2'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg type='B' index='2'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg type='B' index='3'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg type='B' index='3'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg type='B' index='2'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg type='B' index='2'/>
</method>
<method selector='relinquishPresentedItemToReader:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@?'/>
<retval type='v'/>
</arg>
</method>
<method selector='relinquishPresentedItemToWriter:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@?'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='resolveClassMethod:'>
<retval type='B'/>
</method>
<method class_method='true' selector='resolveInstanceMethod:'>
<retval type='B'/>
</method>
<method selector='respondsToSelector:'>
<retval type='B'/>
</method>
<method selector='savePresentedItemChangesWithCompletionHandler:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
<method class_method='true' selector='useStoredAccessor'>
<retval type='B'/>
</method>
<method selector='validateValue:forKey:error:'>
<arg type_modifier='N' index='0'/>
<arg type_modifier='o' index='2'/>
<retval type='B'/>
</method>
<method selector='validateValue:forKeyPath:error:'>
<arg type_modifier='N' index='0'/>
<arg type_modifier='o' index='2'/>
<retval type='B'/>
</method>
</class>
<class name='NSOperation'>
<method selector='isCancelled'>
<retval type='B'/>
</method>
<method selector='isConcurrent'>
<retval type='B'/>
</method>
<method selector='isExecuting'>
<retval type='B'/>
</method>
<method selector='isFinished'>
<retval type='B'/>
</method>
<method selector='isReady'>
<retval type='B'/>
</method>
<method selector='setCompletionBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSOperationQueue'>
<method selector='addOperationWithBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<retval type='v'/>
</arg>
</method>
<method selector='addOperations:waitUntilFinished:'>
<arg type='B' index='1'/>
</method>
<method selector='isSuspended'>
<retval type='B'/>
</method>
<method selector='setSuspended:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSOrderedSet'>
<method selector='containsObject:'>
<retval type='B'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='initWithArray:copyItems:'>
<arg type='B' index='1'/>
</method>
<method selector='initWithArray:range:copyItems:'>
<arg type='B' index='2'/>
</method>
<method variadic='true' sentinel='0' selector='initWithObjects:'/>
<method selector='initWithOrderedSet:copyItems:'>
<arg type='B' index='1'/>
</method>
<method selector='initWithOrderedSet:range:copyItems:'>
<arg type='B' index='2'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg type='B' index='1'/>
</method>
<method selector='intersectsOrderedSet:'>
<retval type='B'/>
</method>
<method selector='intersectsSet:'>
<retval type='B'/>
</method>
<method selector='isEqualToOrderedSet:'>
<retval type='B'/>
</method>
<method selector='isSubsetOfOrderedSet:'>
<retval type='B'/>
</method>
<method selector='isSubsetOfSet:'>
<retval type='B'/>
</method>
<method class_method='true' selector='orderedSetWithArray:range:copyItems:'>
<arg type='B' index='2'/>
</method>
<method class_method='true' variadic='true' sentinel='0' selector='orderedSetWithObjects:'/>
<method class_method='true' selector='orderedSetWithOrderedSet:range:copyItems:'>
<arg type='B' index='2'/>
</method>
<method class_method='true' selector='orderedSetWithSet:copyItems:'>
<arg type='B' index='1'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
</class>
<class name='NSOutputStream'>
<method selector='hasSpaceAvailable'>
<retval type='B'/>
</method>
<method selector='initToFileAtPath:append:'>
<arg type='B' index='1'/>
</method>
<method selector='initWithURL:append:'>
<arg type='B' index='1'/>
</method>
<method class_method='true' selector='outputStreamToFileAtPath:append:'>
<arg type='B' index='1'/>
</method>
<method class_method='true' selector='outputStreamWithURL:append:'>
<arg type='B' index='1'/>
</method>
</class>
<class name='NSPort'>
<method selector='isValid'>
<retval type='B'/>
</method>
<method selector='sendBeforeDate:components:from:reserved:'>
<retval type='B'/>
</method>
<method selector='sendBeforeDate:msgid:components:from:reserved:'>
<retval type='B'/>
</method>
</class>
<class name='NSPredicate'>
<method selector='evaluateWithObject:'>
<retval type='B'/>
</method>
<method selector='evaluateWithObject:substitutionVariables:'>
<retval type='B'/>
</method>
<method class_method='true' selector='predicateWithBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='@'/>
<retval type='B'/>
</arg>
</method>
<method class_method='true' selector='predicateWithValue:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='automaticTerminationSupportEnabled'>
<retval type='B'/>
</method>
<method selector='setAutomaticTerminationSupportEnabled:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSPropertyListSerialization'>
<method class_method='true' selector='dataFromPropertyList:format:errorDescription:'>
<arg type_modifier='o' index='2'/>
</method>
<method class_method='true' selector='dataWithPropertyList:format:options:error:'>
<arg type_modifier='o' index='3'/>
</method>
<method class_method='true' selector='propertyList:isValidForFormat:'>
<retval type='B'/>
</method>
<method class_method='true' selector='propertyListFromData:mutabilityOption:format:errorDescription:'>
<arg type_modifier='o' index='3'/>
</method>
<method class_method='true' selector='propertyListWithData:options:format:error:'>
<arg type_modifier='o' index='3'/>
</method>
<method class_method='true' selector='propertyListWithStream:options:format:error:'>
<arg type_modifier='o' index='3'/>
</method>
<method class_method='true' selector='writePropertyList:toStream:format:options:error:'>
<arg type_modifier='o' index='4'/>
</method>
</class>
<class name='NSProxy'>
<method class_method='true' selector='respondsToSelector:'>
<retval type='B'/>
</method>
</class>
<class name='NSRecursiveLock'>
<method selector='lockBeforeDate:'>
<retval type='B'/>
</method>
<method selector='tryLock'>
<retval type='B'/>
</method>
</class>
<class name='NSRegularExpression'>
<method selector='enumerateMatchesInString:options:range:usingBlock:'>
<arg type='@?' function_pointer='true' index='3'>
<arg type='@'/>
<arg type='I' type64='Q'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSRunLoop'>
<method selector='runMode:beforeDate:'>
<retval type='B'/>
</method>
</class>
<class name='NSScanner'>
<method selector='caseSensitive'>
<retval type='B'/>
</method>
<method selector='isAtEnd'>
<retval type='B'/>
</method>
<method selector='scanCharactersFromSet:intoString:'>
<retval type='B'/>
</method>
<method selector='scanDecimal:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' index='0'/>
<retval type='B'/>
</method>
<method selector='scanDouble:'>
<retval type='B'/>
</method>
<method selector='scanFloat:'>
<retval type='B'/>
</method>
<method selector='scanHexDouble:'>
<retval type='B'/>
</method>
<method selector='scanHexFloat:'>
<retval type='B'/>
</method>
<method selector='scanHexInt:'>
<retval type='B'/>
</method>
<method selector='scanHexLongLong:'>
<retval type='B'/>
</method>
<method selector='scanInt:'>
<retval type='B'/>
</method>
<method selector='scanInteger:'>
<retval type='B'/>
</method>
<method selector='scanLongLong:'>
<retval type='B'/>
</method>
<method selector='scanString:intoString:'>
<retval type='B'/>
</method>
<method selector='scanUpToCharactersFromSet:intoString:'>
<retval type='B'/>
</method>
<method selector='scanUpToString:intoString:'>
<retval type='B'/>
</method>
<method selector='setCaseSensitive:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSSet'>
<method selector='containsObject:'>
<retval type='B'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method variadic='true' sentinel='0' selector='initWithObjects:'/>
<method selector='initWithSet:copyItems:'>
<arg type='B' index='1'/>
</method>
<method selector='intersectsSet:'>
<retval type='B'/>
</method>
<method selector='isEqualToSet:'>
<retval type='B'/>
</method>
<method selector='isSubsetOfSet:'>
<retval type='B'/>
</method>
<method selector='objectsPassingTest:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method selector='objectsWithOptions:passingTest:'>
<arg type='@?' function_pointer='true' index='1'>
<arg type='@'/>
<arg type='^B'/>
<retval type='B'/>
</arg>
</method>
<method class_method='true' variadic='true' sentinel='0' selector='setWithObjects:'/>
</class>
<class name='NSSortDescriptor'>
<method selector='ascending'>
<retval type='B'/>
</method>
<method selector='initWithKey:ascending:'>
<arg type='B' index='1'/>
</method>
<method selector='initWithKey:ascending:comparator:'>
<arg type='B' index='1'/>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method selector='initWithKey:ascending:selector:'>
<arg type='B' index='1'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:'>
<arg type='B' index='1'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:comparator:'>
<arg type='B' index='1'/>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='@'/>
<retval type='i' type64='q'/>
</arg>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:selector:'>
<arg type='B' index='1'/>
</method>
</class>
<class name='NSStream'>
<method selector='setProperty:forKey:'>
<retval type='B'/>
</method>
</class>
<class name='NSString'>
<method selector='boolValue'>
<retval type='B'/>
</method>
<method selector='canBeConvertedToEncoding:'>
<retval type='B'/>
</method>
<method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
<arg type='B' index='1'/>
</method>
<method selector='dataUsingEncoding:allowLossyConversion:'>
<arg type='B' index='1'/>
</method>
<method selector='enumerateLinesUsingBlock:'>
<arg type='@?' function_pointer='true' index='0'>
<arg type='@'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:'>
<arg type='@?' function_pointer='true' index='4'>
<arg type='@'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='enumerateSubstringsInRange:options:usingBlock:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg type='^B'/>
<retval type='v'/>
</arg>
</method>
<method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
<retval type='B'/>
</method>
<method selector='getCString:maxLength:encoding:'>
<retval type='B'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<retval type='B'/>
</method>
<method selector='hasPrefix:'>
<retval type='B'/>
</method>
<method selector='hasSuffix:'>
<retval type='B'/>
</method>
<method selector='initWithBytesNoCopy:length:encoding:freeWhenDone:'>
<arg type='B' index='3'/>
</method>
<method selector='initWithCStringNoCopy:length:freeWhenDone:'>
<arg type='B' index='2'/>
</method>
<method selector='initWithCharactersNoCopy:length:freeWhenDone:'>
<arg type='B' index='2'/>
</method>
<method variadic='true' selector='initWithFormat:'/>
<method selector='initWithFormat:arguments:'/>
<method variadic='true' selector='initWithFormat:locale:'/>
<method selector='initWithFormat:locale:arguments:'/>
<method selector='isAbsolutePath'>
<retval type='B'/>
</method>
<method selector='isEqualToString:'>
<retval type='B'/>
</method>
<method class_method='true' variadic='true' selector='localizedStringWithFormat:'/>
<method variadic='true' selector='stringByAppendingFormat:'/>
<method class_method='true' variadic='true' selector='stringWithFormat:'/>
<method selector='writeToFile:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToFile:atomically:encoding:error:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
<method selector='writeToURL:atomically:encoding:error:'>
<arg type='B' index='1'/>
<retval type='B'/>
</method>
</class>
<class name='NSThread'>
<method selector='isCancelled'>
<retval type='B'/>
</method>
<method selector='isExecuting'>
<retval type='B'/>
</method>
<method selector='isFinished'>
<retval type='B'/>
</method>
<method class_method='true' selector='isMainThread'>
<retval type='B'/>
</method>
<method selector='isMainThread'>
<retval type='B'/>
</method>
<method class_method='true' selector='isMultiThreaded'>
<retval type='B'/>
</method>
<method class_method='true' selector='setThreadPriority:'>
<retval type='B'/>
</method>
</class>
<class name='NSTimeZone'>
<method selector='isDaylightSavingTime'>
<retval type='B'/>
</method>
<method selector='isDaylightSavingTimeForDate:'>
<retval type='B'/>
</method>
<method selector='isEqualToTimeZone:'>
<retval type='B'/>
</method>
</class>
<class name='NSTimer'>
<method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
<arg type='B' index='5'/>
</method>
<method selector='isValid'>
<retval type='B'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:invocation:repeats:'>
<arg type='B' index='2'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg type='B' index='4'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:invocation:repeats:'>
<arg type='B' index='2'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg type='B' index='4'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLByAppendingPathComponent:isDirectory:'>
<arg type='B' index='1'/>
</method>
<method class_method='true' selector='URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg type='^B' index='3'/>
</method>
<method selector='URLHandleUsingCache:'>
<arg type='B' index='0'/>
</method>
<method selector='checkResourceIsReachableAndReturnError:'>
<retval type='B'/>
</method>
<method class_method='true' selector='fileURLWithPath:isDirectory:'>
<arg type='B' index='1'/>
</method>
<method selector='getResourceValue:forKey:error:'>
<arg type_modifier='o' index='0'/>
<arg type_modifier='o' index='2'/>
<retval type='B'/>
</method>
<method selector='initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg type='^B' index='3'/>
</method>
<method selector='initFileURLWithPath:isDirectory:'>
<arg type='B' index='1'/>
</method>
<method selector='isFileReferenceURL'>
<retval type='B'/>
</method>
<method selector='isFileURL'>
<retval type='B'/>
</method>
<method selector='loadResourceDataNotifyingClient:usingCache:'>
<arg type='B' index='1'/>
</method>
<method selector='resourceDataUsingCache:'>
<arg type='B' index='0'/>
</method>
<method selector='setProperty:forKey:'>
<retval type='B'/>
</method>
<method selector='setResourceData:'>
<retval type='B'/>
</method>
<method selector='setResourceValue:forKey:error:'>
<retval type='B'/>
</method>
<method selector='setResourceValues:error:'>
<retval type='B'/>
</method>
<method class_method='true' selector='writeBookmarkData:toURL:options:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='canHandleRequest:'>
<retval type='B'/>
</method>
<method selector='initWithRequest:delegate:startImmediately:'>
<arg type='B' index='2'/>
</method>
<method class_method='true' selector='sendAsynchronousRequest:queue:completionHandler:'>
<arg type='@?' function_pointer='true' index='2'>
<arg type='@'/>
<arg type='@'/>
<arg type='@'/>
<retval type='v'/>
</arg>
</method>
</class>
<class name='NSURLCredential'>
<method selector='hasPassword'>
<retval type='B'/>
</method>
</class>
<class name='NSURLProtectionSpace'>
<method selector='isProxy'>
<retval type='B'/>
</method>
<method selector='receivesCredentialSecurely'>
<retval type='B'/>
</method>
</class>
<class name='NSURLProtocol'>
<method class_method='true' selector='canInitWithRequest:'>
<retval type='B'/>
</method>
<method class_method='true' selector='registerClass:'>
<retval type='B'/>
</method>
<method class_method='true' selector='requestIsCacheEquivalent:toRequest:'>
<retval type='B'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='HTTPShouldHandleCookies'>
<retval type='B'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type='B'/>
</method>
</class>
<class name='NSUbiquitousKeyValueStore'>
<method selector='boolForKey:'>
<retval type='B'/>
</method>
<method selector='setBool:forKey:'>
<arg type='B' index='0'/>
</method>
<method selector='synchronize'>
<retval type='B'/>
</method>
</class>
<class name='NSUndoManager'>
<method selector='canRedo'>
<retval type='B'/>
</method>
<method selector='canUndo'>
<retval type='B'/>
</method>
<method selector='groupsByEvent'>
<retval type='B'/>
</method>
<method selector='isRedoing'>
<retval type='B'/>
</method>
<method selector='isUndoRegistrationEnabled'>
<retval type='B'/>
</method>
<method selector='isUndoing'>
<retval type='B'/>
</method>
<method selector='redoActionIsDiscardable'>
<retval type='B'/>
</method>
<method selector='setActionIsDiscardable:'>
<arg type='B' index='0'/>
</method>
<method selector='setGroupsByEvent:'>
<arg type='B' index='0'/>
</method>
<method selector='undoActionIsDiscardable'>
<retval type='B'/>
</method>
</class>
<class name='NSUserDefaults'>
<method selector='boolForKey:'>
<retval type='B'/>
</method>
<method selector='objectIsForcedForKey:'>
<retval type='B'/>
</method>
<method selector='objectIsForcedForKey:inDomain:'>
<retval type='B'/>
</method>
<method selector='setBool:forKey:'>
<arg type='B' index='0'/>
</method>
<method selector='synchronize'>
<retval type='B'/>
</method>
</class>
<class name='NSValue'>
<method selector='isEqualToValue:'>
<retval type='B'/>
</method>
</class>
<class name='NSValueTransformer'>
<method class_method='true' selector='allowsReverseTransformation'>
<retval type='B'/>
</method>
</class>
<class name='NSXMLParser'>
<method selector='parse'>
<retval type='B'/>
</method>
<method selector='setShouldProcessNamespaces:'>
<arg type='B' index='0'/>
</method>
<method selector='setShouldReportNamespacePrefixes:'>
<arg type='B' index='0'/>
</method>
<method selector='setShouldResolveExternalEntities:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldProcessNamespaces'>
<retval type='B'/>
</method>
<method selector='shouldReportNamespacePrefixes'>
<retval type='B'/>
</method>
<method selector='shouldResolveExternalEntities'>
<retval type='B'/>
</method>
</class>
<informal_protocol name='NSCacheDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='cache:willEvictObject:'/>
</informal_protocol>
<informal_protocol name='NSCoderMethods'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='awakeAfterUsingCoder:'/>
<method type='#8@0:4' type64='#16@0:8' selector='classForCoder'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForCoder:'/>
<method type='v12@0:4i8' type64='v24@0:8q16' class_method='true' selector='setVersion:'/>
<method type='i8@0:4' type64='q16@0:8' class_method='true' selector='version'/>
</informal_protocol>
<informal_protocol name='NSCoding'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='encodeWithCoder:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='initWithCoder:'/>
</informal_protocol>
<informal_protocol name='NSCopyLinkMoveHandler'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldProceedAfterError:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='fileManager:willProcessPath:'/>
</informal_protocol>
<informal_protocol name='NSCopying'>
<method type='@12@0:4^{_NSZone=}8' type64='@24@0:8^{_NSZone=}16' selector='copyWithZone:'/>
</informal_protocol>
<informal_protocol name='NSDecimalNumberBehaviors'>
<method type='@24@0:4:8I12@16@20' type64='@48@0:8:16Q24@32@40' selector='exceptionDuringOperation:error:leftOperand:rightOperand:'/>
<method type='I8@0:4' type64='Q16@0:8' selector='roundingMode'/>
<method type='s8@0:4' type64='s16@0:8' selector='scale'/>
</informal_protocol>
<informal_protocol name='NSDelayedPerforming'>
<method type='v12@0:4@8' type64='v24@0:8@16' class_method='true' selector='cancelPreviousPerformRequestsWithTarget:'/>
<method type='v20@0:4@8:12@16' type64='v40@0:8@16:24@32' class_method='true' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'/>
<method type='v24@0:4:8@12d16' type64='v40@0:8:16@24d32' selector='performSelector:withObject:afterDelay:'/>
<method type='v28@0:4:8@12d16@24' type64='v48@0:8:16@24d32@40' selector='performSelector:withObject:afterDelay:inModes:'/>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueCoding'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='handleQueryWithUnboundKey:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='handleTakeValue:forUnboundKey:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='storedValueForKey:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeStoredValue:forKey:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeValue:forKey:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeValue:forKeyPath:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='takeValuesFromDictionary:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unableToSetNilForKey:'/>
<method type='B8@0:4' type64='B16@0:8' class_method='true' selector='useStoredAccessor'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valuesForKeys:'/>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueObservingCustomization'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' class_method='true' selector='setKeys:triggerChangeNotificationsForDependentKey:'/>
</informal_protocol>
<informal_protocol name='NSDiscardableContent'>
<method type='B8@0:4' type64='B16@0:8' selector='beginContentAccess'/>
<method type='v8@0:4' type64='v16@0:8' selector='discardContentIfPossible'/>
<method type='v8@0:4' type64='v16@0:8' selector='endContentAccess'/>
<method type='B8@0:4' type64='B16@0:8' selector='isContentDiscarded'/>
</informal_protocol>
<informal_protocol name='NSDiscardableContentProxy'>
<method type='@8@0:4' type64='@16@0:8' selector='autoContentAccessingProxy'/>
</informal_protocol>
<informal_protocol name='NSErrorRecoveryAttempting'>
<method type='B16@0:4@8I12' type64='B32@0:8@16Q24' selector='attemptRecoveryFromError:optionIndex:'/>
<method type='v28@0:4@8I12@16:20^v24' type64='v56@0:8@16Q24@32:40^v48' selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'/>
</informal_protocol>
<informal_protocol name='NSFastEnumeration'>
<method type='I20@0:4^{?=L^@^L[5L]}8^@12I16' type64='Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32' selector='countByEnumeratingWithState:objects:count:'/>
</informal_protocol>
<informal_protocol name='NSFileManagerDelegate'>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtPath:toPath:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtURL:toURL:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtPath:toPath:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtURL:toURL:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtPath:toPath:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtURL:toURL:'/>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'/>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'/>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'/>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'/>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'/>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtPath:'/>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtURL:'/>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtPath:'/>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtURL:'/>
</informal_protocol>
<informal_protocol name='NSFilePresenter'>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='accommodatePresentedItemDeletionWithCompletionHandler:'/>
<method type='v16@0:4@8@?12' type64='v32@0:8@16@?24' selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'/>
<method type='v8@0:4' type64='v16@0:8' selector='presentedItemDidChange'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidGainVersion:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidLoseVersion:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidMoveToURL:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidResolveConflictVersion:'/>
<method type='@8@0:4' type64='@16@0:8' selector='presentedItemOperationQueue'/>
<method type='@8@0:4' type64='@16@0:8' selector='presentedItemURL'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didGainVersion:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didLoseVersion:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didMoveToURL:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didResolveConflictVersion:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedSubitemDidAppearAtURL:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedSubitemDidChangeAtURL:'/>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='relinquishPresentedItemToReader:'/>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='relinquishPresentedItemToWriter:'/>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='savePresentedItemChangesWithCompletionHandler:'/>
</informal_protocol>
<informal_protocol name='NSKeyValueCoding'>
<method type='B8@0:4' type64='B16@0:8' class_method='true' selector='accessInstanceVariablesDirectly'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='dictionaryWithValuesForKeys:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableArrayValueForKey:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableArrayValueForKeyPath:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableOrderedSetValueForKey:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableOrderedSetValueForKeyPath:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableSetValueForKey:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableSetValueForKeyPath:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setNilValueForKey:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forKey:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forKeyPath:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forUndefinedKey:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setValuesForKeysWithDictionary:'/>
<method type='B20@0:4N^@8@12o^@16' type64='B40@0:8N^@16@24o^@32' selector='validateValue:forKey:error:'/>
<method type='B20@0:4N^@8@12o^@16' type64='B40@0:8N^@16@24o^@32' selector='validateValue:forKeyPath:error:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForKey:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForKeyPath:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForUndefinedKey:'/>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverNotification'>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='didChange:valuesAtIndexes:forKey:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='didChangeValueForKey:'/>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='didChangeValueForKey:withSetMutation:usingObjects:'/>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='willChange:valuesAtIndexes:forKey:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='willChangeValueForKey:'/>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='willChangeValueForKey:withSetMutation:usingObjects:'/>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverRegistration'>
<method type='v24@0:4@8@12I16^v20' type64='v48@0:8@16@24Q32^v40' selector='addObserver:forKeyPath:options:context:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='removeObserver:forKeyPath:'/>
<method type='v20@0:4@8@12^v16' type64='v40@0:8@16@24^v32' selector='removeObserver:forKeyPath:context:'/>
</informal_protocol>
<informal_protocol name='NSKeyValueObserving'>
<method type='v24@0:4@8@12@16^v20' type64='v48@0:8@16@24@32^v40' selector='observeValueForKeyPath:ofObject:change:context:'/>
</informal_protocol>
<informal_protocol name='NSKeyValueObservingCustomization'>
<method type='B12@0:4@8' type64='B24@0:8@16' class_method='true' selector='automaticallyNotifiesObserversForKey:'/>
<method type='@12@0:4@8' type64='@24@0:8@16' class_method='true' selector='keyPathsForValuesAffectingValueForKey:'/>
<method type='^v8@0:4' type64='^v16@0:8' selector='observationInfo'/>
<method type='v12@0:4^v8' type64='v24@0:8^v16' selector='setObservationInfo:'/>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='archiver:didEncodeObject:'/>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='archiver:willEncodeObject:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='archiver:willReplaceObject:withObject:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='archiverDidFinish:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='archiverWillFinish:'/>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverObjectSubstitution'>
<method type='@8@0:4' type64='@16@0:8' class_method='true' selector='classFallbacksForKeyedArchiver'/>
<method type='#8@0:4' type64='#16@0:8' selector='classForKeyedArchiver'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForKeyedArchiver:'/>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverDelegate'>
<method type='#20@0:4@8@12@16' type64='#40@0:8@16@24@32' selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'/>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='unarchiver:didDecodeObject:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='unarchiver:willReplaceObject:withObject:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unarchiverDidFinish:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unarchiverWillFinish:'/>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverObjectSubstitution'>
<method type='#8@0:4' type64='#16@0:8' class_method='true' selector='classForKeyedUnarchiver'/>
</informal_protocol>
<informal_protocol name='NSLocking'>
<method type='v8@0:4' type64='v16@0:8' selector='lock'/>
<method type='v8@0:4' type64='v16@0:8' selector='unlock'/>
</informal_protocol>
<informal_protocol name='NSMachPortDelegate'>
<method type='v12@0:4^v8' type64='v24@0:8^v16' selector='handleMachMessage:'/>
</informal_protocol>
<informal_protocol name='NSMetadataQueryDelegate'>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='metadataQuery:replacementObjectForResultObject:'/>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='metadataQuery:replacementValueForAttribute:value:'/>
</informal_protocol>
<informal_protocol name='NSMutableCopying'>
<method type='@12@0:4^{_NSZone=}8' type64='@24@0:8^{_NSZone=}16' selector='mutableCopyWithZone:'/>
</informal_protocol>
<informal_protocol name='NSNetServiceBrowserDelegate'>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindDomain:moreComing:'/>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindService:moreComing:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netServiceBrowser:didNotSearch:'/>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveDomain:moreComing:'/>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveService:moreComing:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceBrowserDidStopSearch:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceBrowserWillSearch:'/>
</informal_protocol>
<informal_protocol name='NSNetServiceDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didNotPublish:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didNotResolve:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didUpdateTXTRecordData:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidPublish:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidResolveAddress:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidStop:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceWillPublish:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceWillResolve:'/>
</informal_protocol>
<informal_protocol name='NSObject'>
<method type='@8@0:4' type64='@16@0:8' selector='autorelease'/>
<method type='#8@0:4' type64='#16@0:8' selector='class'/>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='conformsToProtocol:'/>
<method type='@8@0:4' type64='@16@0:8' selector='debugDescription'/>
<method type='@8@0:4' type64='@16@0:8' selector='description'/>
<method type='I8@0:4' type64='Q16@0:8' selector='hash'/>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isEqual:'/>
<method type='B12@0:4#8' type64='B24@0:8#16' selector='isKindOfClass:'/>
<method type='B12@0:4#8' type64='B24@0:8#16' selector='isMemberOfClass:'/>
<method type='B8@0:4' type64='B16@0:8' selector='isProxy'/>
<method type='@12@0:4:8' type64='@24@0:8:16' selector='performSelector:'/>
<method type='@16@0:4:8@12' type64='@32@0:8:16@24' selector='performSelector:withObject:'/>
<method type='@20@0:4:8@12@16' type64='@40@0:8:16@24@32' selector='performSelector:withObject:withObject:'/>
<method type='Vv8@0:4' type64='Vv16@0:8' selector='release'/>
<method type='B12@0:4:8' type64='B24@0:8:16' selector='respondsToSelector:'/>
<method type='@8@0:4' type64='@16@0:8' selector='retain'/>
<method type='I8@0:4' type64='Q16@0:8' selector='retainCount'/>
<method type='@8@0:4' type64='@16@0:8' selector='self'/>
<method type='#8@0:4' type64='#16@0:8' selector='superclass'/>
<method type='^{_NSZone=}8@0:4' type64='^{_NSZone=}16@0:8' selector='zone'/>
</informal_protocol>
<informal_protocol name='NSPortDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='handlePortMessage:'/>
</informal_protocol>
<informal_protocol name='NSStreamDelegate'>
<method type='v16@0:4@8I12' type64='v32@0:8@16Q24' selector='stream:handleEvent:'/>
</informal_protocol>
<informal_protocol name='NSThreadPerformAdditions'>
<method type='v24@0:4:8@12@16B20' type64='v44@0:8:16@24@32B40' selector='performSelector:onThread:withObject:waitUntilDone:'/>
<method type='v28@0:4:8@12@16B20@24' type64='v52@0:8:16@24@32B40@44' selector='performSelector:onThread:withObject:waitUntilDone:modes:'/>
<method type='v16@0:4:8@12' type64='v32@0:8:16@24' selector='performSelectorInBackground:withObject:'/>
<method type='v20@0:4:8@12B16' type64='v36@0:8:16@24B32' selector='performSelectorOnMainThread:withObject:waitUntilDone:'/>
<method type='v24@0:4:8@12B16@20' type64='v44@0:8:16@24B32@36' selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'/>
</informal_protocol>
<informal_protocol name='NSURLAuthenticationChallengeSender'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='cancelAuthenticationChallenge:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='continueWithoutCredentialForAuthenticationChallenge:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='performDefaultHandlingForAuthenticationChallenge:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='rejectProtectionSpaceAndContinueWithChallenge:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='useCredential:forAuthenticationChallenge:'/>
</informal_protocol>
<informal_protocol name='NSURLClient'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URL:resourceDataDidBecomeAvailable:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URL:resourceDidFailLoadingWithReason:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLResourceDidCancelLoading:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLResourceDidFinishLoading:'/>
</informal_protocol>
<informal_protocol name='NSURLConnectionDataDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveData:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveResponse:'/>
<method type='v24@0:4@8i12i16i20' type64='v48@0:8@16q24q32q40' selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'/>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='connection:needNewBodyStream:'/>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='connection:willCacheResponse:'/>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='connection:willSendRequest:redirectResponse:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='connectionDidFinishLoading:'/>
</informal_protocol>
<informal_protocol name='NSURLConnectionDelegate'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='connection:canAuthenticateAgainstProtectionSpace:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didCancelAuthenticationChallenge:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didFailWithError:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveAuthenticationChallenge:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:willSendRequestForAuthenticationChallenge:'/>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='connectionShouldUseCredentialStorage:'/>
</informal_protocol>
<informal_protocol name='NSURLConnectionDownloadDelegate'>
<method type='v36@0:4@8q12q20q28' type64='v48@0:8@16q24q32q40' selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connectionDidFinishDownloading:destinationURL:'/>
<method type='v28@0:4@8q12q20' type64='v40@0:8@16q24q32' selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'/>
</informal_protocol>
<informal_protocol name='NSURLProtocolClient'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:cachedResponseIsValid:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didCancelAuthenticationChallenge:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didFailWithError:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didLoadData:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didReceiveAuthenticationChallenge:'/>
<method type='v20@0:4@8@12I16' type64='v40@0:8@16@24Q32' selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLProtocolDidFinishLoading:'/>
</informal_protocol>
<informal_protocol name='NSXMLParserDelegate'>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:didEndElement:namespaceURI:qualifiedName:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:didEndMappingPrefix:'/>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:didStartMappingPrefix:toURI:'/>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundCDATA:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundCharacters:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundComment:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundElementDeclarationWithName:model:'/>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundIgnorableWhitespace:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundInternalEntityDeclarationWithName:value:'/>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:foundNotationDeclarationWithName:publicID:systemID:'/>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundProcessingInstructionWithTarget:data:'/>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:parseErrorOccurred:'/>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='parser:resolveExternalEntityName:systemID:'/>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:validationErrorOccurred:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='parserDidEndDocument:'/>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='parserDidStartDocument:'/>
</informal_protocol>
</signatures>
